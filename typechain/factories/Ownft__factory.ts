/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ownft, OwnftInterface } from "../Ownft";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "setDepositWhiteList",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610ea6806100db6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d85780638f32d59b146100f6578063e30c397814610114578063f2fde38b146101325761007d565b80633c7660351461008257806347e7ef24146100b25780634e71e0c8146100ce575b600080fd5b61009c60048036038101906100979190610915565b61014e565b6040516100a9919061096e565b60405180910390f35b6100cc60048036038101906100c791906109b5565b6101f8565b005b6100d66102bc565b005b6100e0610458565b6040516100ed9190610a04565b60405180910390f35b6100fe61047c565b60405161010b9190610a2e565b60405180910390f35b61011c6104d3565b6040516101299190610a04565b60405180910390f35b61014c60048036038101906101479190610a49565b6104f9565b005b600061015861047c565b610197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e90610ad3565b60405180910390fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000905092915050565b60011515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461028b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028290610b3f565b60405180910390fd5b6102b83330838573ffffffffffffffffffffffffffffffffffffffff16610584909392919063ffffffff16565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61050161047c565b610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053790610ad3565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610607846323b872dd60e01b8585856040516024016105a593929190610b5f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061060d565b50505050565b600061066f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166106d49092919063ffffffff16565b90506000815111156106cf578080602001905181019061068f9190610bab565b6106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590610c4a565b60405180910390fd5b5b505050565b60606106e384846000856106ec565b90509392505050565b606082471015610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890610cdc565b60405180910390fd5b61073a85610800565b610779576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077090610d48565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516107a29190610de2565b60006040518083038185875af1925050503d80600081146107df576040519150601f19603f3d011682016040523d82523d6000602084013e6107e4565b606091505b50915091506107f4828286610813565b92505050949350505050565b600080823b905060008111915050919050565b6060831561082357829050610873565b6000835111156108365782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086a9190610e4e565b60405180910390fd5b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108aa8261087f565b9050919050565b6108ba8161089f565b81146108c557600080fd5b50565b6000813590506108d7816108b1565b92915050565b60008115159050919050565b6108f2816108dd565b81146108fd57600080fd5b50565b60008135905061090f816108e9565b92915050565b6000806040838503121561092c5761092b61087a565b5b600061093a858286016108c8565b925050602061094b85828601610900565b9150509250929050565b6000819050919050565b61096881610955565b82525050565b6000602082019050610983600083018461095f565b92915050565b61099281610955565b811461099d57600080fd5b50565b6000813590506109af81610989565b92915050565b600080604083850312156109cc576109cb61087a565b5b60006109da858286016108c8565b92505060206109eb858286016109a0565b9150509250929050565b6109fe8161089f565b82525050565b6000602082019050610a1960008301846109f5565b92915050565b610a28816108dd565b82525050565b6000602082019050610a436000830184610a1f565b92915050565b600060208284031215610a5f57610a5e61087a565b5b6000610a6d848285016108c8565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610abd602083610a76565b9150610ac882610a87565b602082019050919050565b60006020820190508181036000830152610aec81610ab0565b9050919050565b7f4f776e66743a20544f4b454e204e4f5420454e41424c45440000000000000000600082015250565b6000610b29601883610a76565b9150610b3482610af3565b602082019050919050565b60006020820190508181036000830152610b5881610b1c565b9050919050565b6000606082019050610b7460008301866109f5565b610b8160208301856109f5565b610b8e604083018461095f565b949350505050565b600081519050610ba5816108e9565b92915050565b600060208284031215610bc157610bc061087a565b5b6000610bcf84828501610b96565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610c34602a83610a76565b9150610c3f82610bd8565b604082019050919050565b60006020820190508181036000830152610c6381610c27565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610cc6602683610a76565b9150610cd182610c6a565b604082019050919050565b60006020820190508181036000830152610cf581610cb9565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610d32601d83610a76565b9150610d3d82610cfc565b602082019050919050565b60006020820190508181036000830152610d6181610d25565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610d9c578082015181840152602081019050610d81565b83811115610dab576000848401525b50505050565b6000610dbc82610d68565b610dc68185610d73565b9350610dd6818560208601610d7e565b80840191505092915050565b6000610dee8284610db1565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000610e2082610df9565b610e2a8185610a76565b9350610e3a818560208601610d7e565b610e4381610e04565b840191505092915050565b60006020820190508181036000830152610e688184610e15565b90509291505056fea2646970667358221220476580de7073c09df2d936571ff221ca9f33a145dc4b6efc303aa731948a736664736f6c63430008090033";

export class Ownft__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ownft> {
    return super.deploy(overrides || {}) as Promise<Ownft>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ownft {
    return super.attach(address) as Ownft;
  }
  connect(signer: Signer): Ownft__factory {
    return super.connect(signer) as Ownft__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnftInterface {
    return new utils.Interface(_abi) as OwnftInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ownft {
    return new Contract(address, _abi, signerOrProvider) as Ownft;
  }
}
