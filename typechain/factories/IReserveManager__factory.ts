/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IReserveManager,
  IReserveManagerInterface,
} from "../IReserveManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
    ],
    name: "ReserveActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
    ],
    name: "ReserveDeactivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_jdToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_sdToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_interestRateStrategyAddress",
        type: "address",
      },
    ],
    name: "ReserveInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidityRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentJuniorLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentSeniorLiquidityIndex",
        type: "uint256",
      },
    ],
    name: "ReserveUpdated",
    type: "event",
  },
];

export class IReserveManager__factory {
  static readonly abi = _abi;
  static createInterface(): IReserveManagerInterface {
    return new utils.Interface(_abi) as IReserveManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IReserveManager {
    return new Contract(address, _abi, signerOrProvider) as IReserveManager;
  }
}
