/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SecurityDepositToken,
  SecurityDepositTokenInterface,
} from "../SecurityDepositToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlyingAsset",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_underlyingAssetDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200184e3803806200184e833981810160405281019062000037919062000367565b818181600390805190602001906200005192919062000077565b5080600490805190602001906200006a92919062000077565b505050505050506200047c565b828054620000859062000446565b90600052602060002090601f016020900481019282620000a95760008555620000f5565b82601f10620000c457805160ff1916838001178555620000f5565b82800160010185558215620000f5579182015b82811115620000f4578251825591602001919060010190620000d7565b5b50905062000104919062000108565b5090565b5b808211156200012357600081600090555060010162000109565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000168826200013b565b9050919050565b6200017a816200015b565b81146200018657600080fd5b50565b6000815190506200019a816200016f565b92915050565b600060ff82169050919050565b620001b881620001a0565b8114620001c457600080fd5b50565b600081519050620001d881620001ad565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200023382620001e8565b810181811067ffffffffffffffff82111715620002555762000254620001f9565b5b80604052505050565b60006200026a62000127565b905062000278828262000228565b919050565b600067ffffffffffffffff8211156200029b576200029a620001f9565b5b620002a682620001e8565b9050602081019050919050565b60005b83811015620002d3578082015181840152602081019050620002b6565b83811115620002e3576000848401525b50505050565b600062000300620002fa846200027d565b6200025e565b9050828152602081018484840111156200031f576200031e620001e3565b5b6200032c848285620002b3565b509392505050565b600082601f8301126200034c576200034b620001de565b5b81516200035e848260208601620002e9565b91505092915050565b6000806000806080858703121562000384576200038362000131565b5b6000620003948782880162000189565b9450506020620003a787828801620001c7565b935050604085015167ffffffffffffffff811115620003cb57620003ca62000136565b5b620003d98782880162000334565b925050606085015167ffffffffffffffff811115620003fd57620003fc62000136565b5b6200040b8782880162000334565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200045f57607f821691505b6020821081141562000476576200047562000417565b5b50919050565b6113c2806200048c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610c56565b60405180910390f35b6100e660048036038101906100e19190610d11565b610308565b6040516100f39190610d6c565b60405180910390f35b610104610326565b6040516101119190610d96565b60405180910390f35b610134600480360381019061012f9190610db1565b610330565b6040516101419190610d6c565b60405180910390f35b610152610428565b60405161015f9190610e20565b60405180910390f35b610182600480360381019061017d9190610d11565b610431565b60405161018f9190610d6c565b60405180910390f35b6101b260048036038101906101ad9190610e3b565b6104dd565b6040516101bf9190610d96565b60405180910390f35b6101d06104f5565b6040516101dd9190610c56565b60405180910390f35b61020060048036038101906101fb9190610d11565b610587565b60405161020d9190610d6c565b60405180910390f35b610230600480360381019061022b9190610d11565b610672565b60405161023d9190610d6c565b60405180910390f35b610260600480360381019061025b9190610e68565b610690565b60405161026d9190610d96565b60405180910390f35b60606003805461028590610ed7565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610ed7565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610717565b848461071f565b6001905092915050565b6000600254905090565b600061033d8484846108ea565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610717565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610f7b565b60405180910390fd5b61041c85610414610717565b85840361071f565b60019150509392505050565b60006012905090565b60006104d361043e610717565b84846001600061044c610717565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610fca565b61071f565b6001905092915050565b6000806104e983610b6b565b90506000915050919050565b60606004805461050490610ed7565b80601f016020809104026020016040519081016040528092919081815260200182805461053090610ed7565b801561057d5780601f106105525761010080835404028352916020019161057d565b820191906000526020600020905b81548152906001019060200180831161056057829003601f168201915b5050505050905090565b60008060016000610596610717565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90611092565b60405180910390fd5b61066761065e610717565b8585840361071f565b600191505092915050565b600061068661067f610717565b84846108ea565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690611124565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f6906111b6565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108dd9190610d96565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095190611248565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c1906112da565b60405180910390fd5b6109d5838383610bb3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a529061136c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aee9190610fca565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b529190610d96565b60405180910390a3610b65848484610bb8565b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bf7578082015181840152602081019050610bdc565b83811115610c06576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c2882610bbd565b610c328185610bc8565b9350610c42818560208601610bd9565b610c4b81610c0c565b840191505092915050565b60006020820190508181036000830152610c708184610c1d565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ca882610c7d565b9050919050565b610cb881610c9d565b8114610cc357600080fd5b50565b600081359050610cd581610caf565b92915050565b6000819050919050565b610cee81610cdb565b8114610cf957600080fd5b50565b600081359050610d0b81610ce5565b92915050565b60008060408385031215610d2857610d27610c78565b5b6000610d3685828601610cc6565b9250506020610d4785828601610cfc565b9150509250929050565b60008115159050919050565b610d6681610d51565b82525050565b6000602082019050610d816000830184610d5d565b92915050565b610d9081610cdb565b82525050565b6000602082019050610dab6000830184610d87565b92915050565b600080600060608486031215610dca57610dc9610c78565b5b6000610dd886828701610cc6565b9350506020610de986828701610cc6565b9250506040610dfa86828701610cfc565b9150509250925092565b600060ff82169050919050565b610e1a81610e04565b82525050565b6000602082019050610e356000830184610e11565b92915050565b600060208284031215610e5157610e50610c78565b5b6000610e5f84828501610cc6565b91505092915050565b60008060408385031215610e7f57610e7e610c78565b5b6000610e8d85828601610cc6565b9250506020610e9e85828601610cc6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610eef57607f821691505b60208210811415610f0357610f02610ea8565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000610f65602883610bc8565b9150610f7082610f09565b604082019050919050565b60006020820190508181036000830152610f9481610f58565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fd582610cdb565b9150610fe083610cdb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561101557611014610f9b565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061107c602583610bc8565b915061108782611020565b604082019050919050565b600060208201905081810360008301526110ab8161106f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061110e602483610bc8565b9150611119826110b2565b604082019050919050565b6000602082019050818103600083015261113d81611101565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006111a0602283610bc8565b91506111ab82611144565b604082019050919050565b600060208201905081810360008301526111cf81611193565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611232602583610bc8565b915061123d826111d6565b604082019050919050565b6000602082019050818103600083015261126181611225565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006112c4602383610bc8565b91506112cf82611268565b604082019050919050565b600060208201905081810360008301526112f3816112b7565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611356602683610bc8565b9150611361826112fa565b604082019050919050565b6000602082019050818103600083015261138581611349565b905091905056fea2646970667358221220d3514a113c8bb1538ceea9100e433efcbe5821cf51a37b997004b26a8d4da61f64736f6c63430008090033";

export class SecurityDepositToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _underlyingAsset: string,
    _underlyingAssetDecimals: BigNumberish,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SecurityDepositToken> {
    return super.deploy(
      _underlyingAsset,
      _underlyingAssetDecimals,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<SecurityDepositToken>;
  }
  getDeployTransaction(
    _underlyingAsset: string,
    _underlyingAssetDecimals: BigNumberish,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _underlyingAsset,
      _underlyingAssetDecimals,
      _name,
      _symbol,
      overrides || {}
    );
  }
  attach(address: string): SecurityDepositToken {
    return super.attach(address) as SecurityDepositToken;
  }
  connect(signer: Signer): SecurityDepositToken__factory {
    return super.connect(signer) as SecurityDepositToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecurityDepositTokenInterface {
    return new utils.Interface(_abi) as SecurityDepositTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SecurityDepositToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SecurityDepositToken;
  }
}
