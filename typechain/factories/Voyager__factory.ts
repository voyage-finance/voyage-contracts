/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Voyager, VoyagerInterface } from "../Voyager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "addressResolver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressResolverAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLiquidityManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLoanManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultStorageName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loanManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressResolver",
        type: "address",
      },
    ],
    name: "setAddressResolverAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultStorageName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610977806100db6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806394f6744311610097578063b550906f11610066578063b550906f14610259578063b75fc04a14610277578063e30c397814610293578063f2fde38b146102b157610100565b806394f67443146101e15780639894c89e146101ff5780639f423c3a1461021d578063ad64caed1461023b57610100565b80636023f816116100d35780636023f816146101695780638c942ffd146101875780638da5cb5b146101a55780638f32d59b146101c357610100565b806305a2ee2a1461010557806306a8978c14610123578063283761a4146101415780634e71e0c81461015f575b600080fd5b61010d6102cd565b60405161011a91906107e1565b60405180910390f35b61012b6102f3565b6040516101389190610815565b60405180910390f35b61014961031b565b6040516101569190610815565b60405180910390f35b610167610343565b005b6101716104df565b60405161017e9190610815565b60405180910390f35b61018f610503565b60405161019c9190610815565b60405180910390f35b6101ad610527565b6040516101ba91906107e1565b60405180910390f35b6101cb61054b565b6040516101d8919061084b565b60405180910390f35b6101e96105a2565b6040516101f691906107e1565b60405180910390f35b6102076105cc565b6040516102149190610815565b60405180910390f35b6102256105f0565b6040516102329190610815565b60405180910390f35b610243610618565b6040516102509190610815565b60405180910390f35b61026161063c565b60405161026e9190610815565b60405180910390f35b610291600480360381019061028c9190610897565b610664565b005b61029b6106ef565b6040516102a891906107e1565b60405180910390f35b6102cb60048036038101906102c69190610897565b610715565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f6c69717569646974794d616e6167657200000000000000000000000000000000905090565b60007f7661756c7453746f726167650000000000000000000000000000000000000000905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039d57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f6c69717569646974794d616e616765720000000000000000000000000000000081565b7f7661756c7453746f72616765000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f7661756c744d616e61676572000000000000000000000000000000000000000081565b60007f7661756c744d616e616765720000000000000000000000000000000000000000905090565b7f6c6f616e4d616e6167657200000000000000000000000000000000000000000081565b60007f6c6f616e4d616e61676572000000000000000000000000000000000000000000905090565b61066c61054b565b6106ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a290610921565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61071d61054b565b61075c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075390610921565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107cb826107a0565b9050919050565b6107db816107c0565b82525050565b60006020820190506107f660008301846107d2565b92915050565b6000819050919050565b61080f816107fc565b82525050565b600060208201905061082a6000830184610806565b92915050565b60008115159050919050565b61084581610830565b82525050565b6000602082019050610860600083018461083c565b92915050565b600080fd5b610874816107c0565b811461087f57600080fd5b50565b6000813590506108918161086b565b92915050565b6000602082840312156108ad576108ac610866565b5b60006108bb84828501610882565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061090b6020836108c4565b9150610916826108d5565b602082019050919050565b6000602082019050818103600083015261093a816108fe565b905091905056fea26469706673582212205e9a190c5baacbc7c4f9333d213b230343fd0f65dd497c1a2abc4c72b7c9d21c64736f6c63430008090033";

export class Voyager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Voyager> {
    return super.deploy(overrides || {}) as Promise<Voyager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Voyager {
    return super.attach(address) as Voyager;
  }
  connect(signer: Signer): Voyager__factory {
    return super.connect(signer) as Voyager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoyagerInterface {
    return new utils.Interface(_abi) as VoyagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Voyager {
    return new Contract(address, _abi, signerOrProvider) as Voyager;
  }
}
