/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Voyager, VoyagerInterface } from "../Voyager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "addressResolver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressResolverAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLiquidityManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLoanManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultManagerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultStorageName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loanManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressResolver",
        type: "address",
      },
    ],
    name: "setAddressResolverAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultStorageName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610c38806100db6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063ad64caed11610071578063ad64caed146102b6578063b550906f146102d4578063b75fc04a146102f2578063e30c39781461030e578063f2fde38b1461032c57610121565b80638da5cb5b146102205780638f32d59b1461023e57806394f674431461025c5780639894c89e1461027a5780639f423c3a1461029857610121565b80634e71e0c8116100f45780634e71e0c81461019e5780635d12928b146101a85780636023f816146101c65780638c942ffd146101e45780638d928af81461020257610121565b806305a2ee2a1461012657806306a8978c1461014457806307bc438814610162578063283761a414610180575b600080fd5b61012e610348565b60405161013b9190610a60565b60405180910390f35b61014c61036e565b6040516101599190610a94565b60405180910390f35b61016a610396565b6040516101779190610a60565b60405180910390f35b610188610468565b6040516101959190610a94565b60405180910390f35b6101a6610490565b005b6101b061062c565b6040516101bd9190610a60565b60405180910390f35b6101ce6106c5565b6040516101db9190610a94565b60405180910390f35b6101ec6106e9565b6040516101f99190610a94565b60405180910390f35b61020a61070d565b6040516102179190610a60565b60405180910390f35b6102286107a6565b6040516102359190610a60565b60405180910390f35b6102466107ca565b6040516102539190610aca565b60405180910390f35b610264610821565b6040516102719190610a60565b60405180910390f35b61028261084b565b60405161028f9190610a94565b60405180910390f35b6102a061086f565b6040516102ad9190610a94565b60405180910390f35b6102be610897565b6040516102cb9190610a94565b60405180910390f35b6102dc6108bb565b6040516102e99190610a94565b60405180910390f35b61030c60048036038101906103079190610b16565b6108e3565b005b61031661096e565b6040516103239190610a60565b60405180910390f35b61034660048036038101906103419190610b16565b610994565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f6c69717569646974794d616e6167657200000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321f8a7217f7661756c744d616e6167657200000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016104139190610a94565b60206040518083038186803b15801561042b57600080fd5b505afa15801561043f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104639190610b58565b905090565b60007f7661756c7453746f726167650000000000000000000000000000000000000000905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ea57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610636610396565b73ffffffffffffffffffffffffffffffffffffffff1663b4bd6f46336040518263ffffffff1660e01b815260040161066e9190610a60565b602060405180830381600087803b15801561068857600080fd5b505af115801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c09190610b58565b905090565b7f6c69717569646974794d616e616765720000000000000000000000000000000081565b7f7661756c7453746f72616765000000000000000000000000000000000000000081565b6000610717610396565b73ffffffffffffffffffffffffffffffffffffffff16630eb9af38336040518263ffffffff1660e01b815260040161074f9190610a60565b602060405180830381600087803b15801561076957600080fd5b505af115801561077d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a19190610b58565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f7661756c744d616e61676572000000000000000000000000000000000000000081565b60007f7661756c744d616e616765720000000000000000000000000000000000000000905090565b7f6c6f616e4d616e6167657200000000000000000000000000000000000000000081565b60007f6c6f616e4d616e61676572000000000000000000000000000000000000000000905090565b6108eb6107ca565b61092a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092190610be2565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61099c6107ca565b6109db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d290610be2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4a82610a1f565b9050919050565b610a5a81610a3f565b82525050565b6000602082019050610a756000830184610a51565b92915050565b6000819050919050565b610a8e81610a7b565b82525050565b6000602082019050610aa96000830184610a85565b92915050565b60008115159050919050565b610ac481610aaf565b82525050565b6000602082019050610adf6000830184610abb565b92915050565b600080fd5b610af381610a3f565b8114610afe57600080fd5b50565b600081359050610b1081610aea565b92915050565b600060208284031215610b2c57610b2b610ae5565b5b6000610b3a84828501610b01565b91505092915050565b600081519050610b5281610aea565b92915050565b600060208284031215610b6e57610b6d610ae5565b5b6000610b7c84828501610b43565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610bcc602083610b85565b9150610bd782610b96565b602082019050919050565b60006020820190508181036000830152610bfb81610bbf565b905091905056fea2646970667358221220e31c1eecfcfa0d52783d03e06cf8ebec438ed87b076054ac5994681266a35a1d64736f6c63430008090033";

export class Voyager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Voyager> {
    return super.deploy(overrides || {}) as Promise<Voyager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Voyager {
    return super.attach(address) as Voyager;
  }
  connect(signer: Signer): Voyager__factory {
    return super.connect(signer) as Voyager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoyagerInterface {
    return new utils.Interface(_abi) as VoyagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Voyager {
    return new Contract(address, _abi, signerOrProvider) as Voyager;
  }
}
