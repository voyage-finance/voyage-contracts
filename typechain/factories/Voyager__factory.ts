/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Voyager, VoyagerInterface } from "../Voyager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "addressResolver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressResolverAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLiquidityManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLoanManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultManagerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultStorageName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loanManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressResolver",
        type: "address",
      },
    ],
    name: "setAddressResolverAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultManagerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultStorageName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610b76806100db6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638f32d59b116100a2578063ad64caed11610071578063ad64caed1461028d578063b550906f146102ab578063b75fc04a146102c9578063e30c3978146102e5578063f2fde38b1461030357610116565b80638f32d59b1461021557806394f67443146102335780639894c89e146102515780639f423c3a1461026f57610116565b80634e71e0c8116100e95780634e71e0c8146101935780635d12928b1461019d5780636023f816146101bb5780638c942ffd146101d95780638da5cb5b146101f757610116565b806305a2ee2a1461011b57806306a8978c1461013957806307bc438814610157578063283761a414610175575b600080fd5b61012361031f565b604051610130919061099e565b60405180910390f35b610141610345565b60405161014e91906109d2565b60405180910390f35b61015f61036d565b60405161016c919061099e565b60405180910390f35b61017d61043f565b60405161018a91906109d2565b60405180910390f35b61019b610467565b005b6101a5610603565b6040516101b2919061099e565b60405180910390f35b6101c361069c565b6040516101d091906109d2565b60405180910390f35b6101e16106c0565b6040516101ee91906109d2565b60405180910390f35b6101ff6106e4565b60405161020c919061099e565b60405180910390f35b61021d610708565b60405161022a9190610a08565b60405180910390f35b61023b61075f565b604051610248919061099e565b60405180910390f35b610259610789565b60405161026691906109d2565b60405180910390f35b6102776107ad565b60405161028491906109d2565b60405180910390f35b6102956107d5565b6040516102a291906109d2565b60405180910390f35b6102b36107f9565b6040516102c091906109d2565b60405180910390f35b6102e360048036038101906102de9190610a54565b610821565b005b6102ed6108ac565b6040516102fa919061099e565b60405180910390f35b61031d60048036038101906103189190610a54565b6108d2565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f6c69717569646974794d616e6167657200000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321f8a7217f7661756c744d616e6167657200000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016103ea91906109d2565b60206040518083038186803b15801561040257600080fd5b505afa158015610416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043a9190610a96565b905090565b60007f7661756c7453746f726167650000000000000000000000000000000000000000905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061060d61036d565b73ffffffffffffffffffffffffffffffffffffffff1663b4bd6f46336040518263ffffffff1660e01b8152600401610645919061099e565b602060405180830381600087803b15801561065f57600080fd5b505af1158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190610a96565b905090565b7f6c69717569646974794d616e616765720000000000000000000000000000000081565b7f7661756c7453746f72616765000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f7661756c744d616e61676572000000000000000000000000000000000000000081565b60007f7661756c744d616e616765720000000000000000000000000000000000000000905090565b7f6c6f616e4d616e6167657200000000000000000000000000000000000000000081565b60007f6c6f616e4d616e61676572000000000000000000000000000000000000000000905090565b610829610708565b610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f90610b20565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108da610708565b610919576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091090610b20565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109888261095d565b9050919050565b6109988161097d565b82525050565b60006020820190506109b3600083018461098f565b92915050565b6000819050919050565b6109cc816109b9565b82525050565b60006020820190506109e760008301846109c3565b92915050565b60008115159050919050565b610a02816109ed565b82525050565b6000602082019050610a1d60008301846109f9565b92915050565b600080fd5b610a318161097d565b8114610a3c57600080fd5b50565b600081359050610a4e81610a28565b92915050565b600060208284031215610a6a57610a69610a23565b5b6000610a7884828501610a3f565b91505092915050565b600081519050610a9081610a28565b92915050565b600060208284031215610aac57610aab610a23565b5b6000610aba84828501610a81565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b0a602083610ac3565b9150610b1582610ad4565b602082019050919050565b60006020820190508181036000830152610b3981610afd565b905091905056fea2646970667358221220bc7f3c489e16a53c22a39075fb18d03e740fdcac97b7e0737294697facddd75f64736f6c63430008090033";

export class Voyager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Voyager> {
    return super.deploy(overrides || {}) as Promise<Voyager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Voyager {
    return super.attach(address) as Voyager;
  }
  connect(signer: Signer): Voyager__factory {
    return super.connect(signer) as Voyager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoyagerInterface {
    return new utils.Interface(_abi) as VoyagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Voyager {
    return new Contract(address, _abi, signerOrProvider) as Voyager;
  }
}
