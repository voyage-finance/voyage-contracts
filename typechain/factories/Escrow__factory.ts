/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Escrow, EscrowInterface } from "../Escrow";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_user",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6117cc806101146000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780638340f549146100665780638da5cb5b14610082578063f2fde38b146100ad578063f940e385146100d6575b600080fd5b34801561005b57600080fd5b506100646100ff565b005b610080600480360381019061007b9190610e7a565b610187565b005b34801561008e57600080fd5b5061009761052e565b6040516100a49190610edc565b60405180910390f35b3480156100b957600080fd5b506100d460048036038101906100cf9190610ef7565b610557565b005b3480156100e257600080fd5b506100fd60048036038101906100f89190610f62565b61064f565b005b610107610860565b73ffffffffffffffffffffffffffffffffffffffff1661012561052e565b73ffffffffffffffffffffffffffffffffffffffff161461017b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017290610fff565b60405180910390fd5b6101856000610868565b565b600260015414156101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c49061106b565b60405180910390fd5b60026001819055506101dd610860565b73ffffffffffffffffffffffffffffffffffffffff166101fb61052e565b73ffffffffffffffffffffffffffffffffffffffff1614610251576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024890610fff565b60405180910390fd5b61025961092c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461030057600034146102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c5906110fd565b60405180910390fd5b6102fb8230838673ffffffffffffffffffffffffffffffffffffffff16610948909392919063ffffffff16565b610343565b803414610342576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103399061118f565b60405180910390fd5b5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103cf91906111de565b92505081905550600060405180604001604052808381526020014264ffffffffff168152509050600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548164ffffffffff021916908364ffffffffff16021790555050508273ffffffffffffffffffffffffffffffffffffffff167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a78584604051610519929190611243565b60405180910390a25060018081905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61055f610860565b73ffffffffffffffffffffffffffffffffffffffff1661057d61052e565b73ffffffffffffffffffffffffffffffffffffffff16146105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca90610fff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a906112de565b60405180910390fd5b61064c81610868565b50565b610657610860565b73ffffffffffffffffffffffffffffffffffffffff1661067561052e565b73ffffffffffffffffffffffffffffffffffffffff16146106cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c290610fff565b60405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b828054905081101561084e57600460009054906101000a900464ffffffffff1664ffffffffff16838281548110610789576107886112fe565b5b906000526020600020906002020160010160009054906101000a900464ffffffffff16426107b7919061133e565b64ffffffffff16111561083b578281815481106107d7576107d66112fe565b5b906000526020600020906002020160000154826107f491906111de565b9150828181548110610809576108086112fe565b5b90600052602060002090600202016000808201600090556001820160006101000a81549064ffffffffff021916905550505b808061084690611372565b91505061074f565b5061085a8484836109d1565b50505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee905090565b6109cb846323b872dd60e01b858585604051602401610969939291906113bb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610aee565b50505050565b6109d961092c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a3b57610a3682828573ffffffffffffffffffffffffffffffffffffffff16610bb59092919063ffffffff16565b610ae9565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610a6190611423565b60006040518083038185875af1925050503d8060008114610a9e576040519150601f19603f3d011682016040523d82523d6000602084013e610aa3565b606091505b5050905080610ae7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ade90611484565b60405180910390fd5b505b505050565b6000610b50826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c3b9092919063ffffffff16565b9050600081511115610bb05780806020019051810190610b7091906114dc565b610baf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba69061157b565b60405180910390fd5b5b505050565b610c368363a9059cbb60e01b8484604051602401610bd4929190611243565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610aee565b505050565b6060610c4a8484600085610c53565b90509392505050565b606082471015610c98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8f9061160d565b60405180910390fd5b610ca185610d67565b610ce0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd790611679565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d099190611708565b60006040518083038185875af1925050503d8060008114610d46576040519150601f19603f3d011682016040523d82523d6000602084013e610d4b565b606091505b5091509150610d5b828286610d7a565b92505050949350505050565b600080823b905060008111915050919050565b60608315610d8a57829050610dda565b600083511115610d9d5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd19190611774565b60405180910390fd5b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1182610de6565b9050919050565b610e2181610e06565b8114610e2c57600080fd5b50565b600081359050610e3e81610e18565b92915050565b6000819050919050565b610e5781610e44565b8114610e6257600080fd5b50565b600081359050610e7481610e4e565b92915050565b600080600060608486031215610e9357610e92610de1565b5b6000610ea186828701610e2f565b9350506020610eb286828701610e2f565b9250506040610ec386828701610e65565b9150509250925092565b610ed681610e06565b82525050565b6000602082019050610ef16000830184610ecd565b92915050565b600060208284031215610f0d57610f0c610de1565b5b6000610f1b84828501610e2f565b91505092915050565b6000610f2f82610de6565b9050919050565b610f3f81610f24565b8114610f4a57600080fd5b50565b600081359050610f5c81610f36565b92915050565b60008060408385031215610f7957610f78610de1565b5b6000610f8785828601610e2f565b9250506020610f9885828601610f4d565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610fe9602083610fa2565b9150610ff482610fb3565b602082019050919050565b6000602082019050818103600083015261101881610fdc565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611055601f83610fa2565b91506110608261101f565b602082019050919050565b6000602082019050818103600083015261108481611048565b9050919050565b7f557365722069732073656e64696e672045544820616c6f6e672077697468207460008201527f6865204552433230207472616e736665722e0000000000000000000000000000602082015250565b60006110e7603283610fa2565b91506110f28261108b565b604082019050919050565b60006020820190508181036000830152611116816110da565b9050919050565b7f54686520616d6f756e7420616e64207468652076616c75652073656e7420746f60008201527f206465706f73697420646f206e6f74206d617463680000000000000000000000602082015250565b6000611179603583610fa2565b91506111848261111d565b604082019050919050565b600060208201905081810360008301526111a88161116c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111e982610e44565b91506111f483610e44565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611229576112286111af565b5b828201905092915050565b61123d81610e44565b82525050565b60006040820190506112586000830185610ecd565b6112656020830184611234565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006112c8602683610fa2565b91506112d38261126c565b604082019050919050565b600060208201905081810360008301526112f7816112bb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600064ffffffffff82169050919050565b60006113498261132d565b91506113548361132d565b925082821015611367576113666111af565b5b828203905092915050565b600061137d82610e44565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113b0576113af6111af565b5b600182019050919050565b60006060820190506113d06000830186610ecd565b6113dd6020830185610ecd565b6113ea6040830184611234565b949350505050565b600081905092915050565b50565b600061140d6000836113f2565b9150611418826113fd565b600082019050919050565b600061142e82611400565b9150819050919050565b7f5472616e73666572206f6620455448206661696c656400000000000000000000600082015250565b600061146e601683610fa2565b915061147982611438565b602082019050919050565b6000602082019050818103600083015261149d81611461565b9050919050565b60008115159050919050565b6114b9816114a4565b81146114c457600080fd5b50565b6000815190506114d6816114b0565b92915050565b6000602082840312156114f2576114f1610de1565b5b6000611500848285016114c7565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611565602a83610fa2565b915061157082611509565b604082019050919050565b6000602082019050818103600083015261159481611558565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006115f7602683610fa2565b91506116028261159b565b604082019050919050565b60006020820190508181036000830152611626816115ea565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611663601d83610fa2565b915061166e8261162d565b602082019050919050565b6000602082019050818103600083015261169281611656565b9050919050565b600081519050919050565b60005b838110156116c25780820151818401526020810190506116a7565b838111156116d1576000848401525b50505050565b60006116e282611699565b6116ec81856113f2565b93506116fc8185602086016116a4565b80840191505092915050565b600061171482846116d7565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006117468261171f565b6117508185610fa2565b93506117608185602086016116a4565b6117698161172a565b840191505092915050565b6000602082019050818103600083015261178e818461173b565b90509291505056fea26469706673582212202142cf4f604d618c07510d68f7701bc92e9805534341ae83c5891a7d714ce0b464736f6c63430008090033";

export class Escrow__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Escrow> {
    return super.deploy(overrides || {}) as Promise<Escrow>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Escrow {
    return super.attach(address) as Escrow;
  }
  connect(signer: Signer): Escrow__factory {
    return super.connect(signer) as Escrow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new utils.Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Escrow {
    return new Contract(address, _abi, signerOrProvider) as Escrow;
  }
}
