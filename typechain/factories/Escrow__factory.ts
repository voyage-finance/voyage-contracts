/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Escrow, EscrowInterface } from "../Escrow";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_user",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61181c806101146000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780638340f549146100665780638da5cb5b14610082578063f2fde38b146100ad578063f940e385146100d6575b600080fd5b34801561005b57600080fd5b506100646100ff565b005b610080600480360381019061007b9190610eca565b610187565b005b34801561008e57600080fd5b5061009761052e565b6040516100a49190610f2c565b60405180910390f35b3480156100b957600080fd5b506100d460048036038101906100cf9190610f47565b610557565b005b3480156100e257600080fd5b506100fd60048036038101906100f89190610fb2565b61064f565b005b6101076108b0565b73ffffffffffffffffffffffffffffffffffffffff1661012561052e565b73ffffffffffffffffffffffffffffffffffffffff161461017b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101729061104f565b60405180910390fd5b61018560006108b8565b565b600260015414156101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c4906110bb565b60405180910390fd5b60026001819055506101dd6108b0565b73ffffffffffffffffffffffffffffffffffffffff166101fb61052e565b73ffffffffffffffffffffffffffffffffffffffff1614610251576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102489061104f565b60405180910390fd5b61025961097c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461030057600034146102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c59061114d565b60405180910390fd5b6102fb8230838673ffffffffffffffffffffffffffffffffffffffff16610998909392919063ffffffff16565b610343565b803414610342576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610339906111df565b60405180910390fd5b5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103cf919061122e565b92505081905550600060405180604001604052808381526020014264ffffffffff168152509050600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548164ffffffffff021916908364ffffffffff16021790555050508273ffffffffffffffffffffffffffffffffffffffff167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a78584604051610519929190611293565b60405180910390a25060018081905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61055f6108b0565b73ffffffffffffffffffffffffffffffffffffffff1661057d61052e565b73ffffffffffffffffffffffffffffffffffffffff16146105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca9061104f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a9061132e565b60405180910390fd5b61064c816108b8565b50565b6106576108b0565b73ffffffffffffffffffffffffffffffffffffffff1661067561052e565b73ffffffffffffffffffffffffffffffffffffffff16146106cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c29061104f565b60405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b828054905081101561084e57600460009054906101000a900464ffffffffff1664ffffffffff168382815481106107895761078861134e565b5b906000526020600020906002020160010160009054906101000a900464ffffffffff16426107b7919061138e565b64ffffffffff16111561083b578281815481106107d7576107d661134e565b5b906000526020600020906002020160000154826107f4919061122e565b91508281815481106108095761080861134e565b5b90600052602060002090600202016000808201600090556001820160006101000a81549064ffffffffff021916905550505b8080610846906113c2565b91505061074f565b5061085a848483610a21565b8273ffffffffffffffffffffffffffffffffffffffff167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb85836040516108a2929190611293565b60405180910390a250505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee905090565b610a1b846323b872dd60e01b8585856040516024016109b99392919061140b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b3e565b50505050565b610a2961097c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a8b57610a8682828573ffffffffffffffffffffffffffffffffffffffff16610c059092919063ffffffff16565b610b39565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610ab190611473565b60006040518083038185875af1925050503d8060008114610aee576040519150601f19603f3d011682016040523d82523d6000602084013e610af3565b606091505b5050905080610b37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2e906114d4565b60405180910390fd5b505b505050565b6000610ba0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c8b9092919063ffffffff16565b9050600081511115610c005780806020019051810190610bc0919061152c565b610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf6906115cb565b60405180910390fd5b5b505050565b610c868363a9059cbb60e01b8484604051602401610c24929190611293565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b3e565b505050565b6060610c9a8484600085610ca3565b90509392505050565b606082471015610ce8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdf9061165d565b60405180910390fd5b610cf185610db7565b610d30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d27906116c9565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d599190611758565b60006040518083038185875af1925050503d8060008114610d96576040519150601f19603f3d011682016040523d82523d6000602084013e610d9b565b606091505b5091509150610dab828286610dca565b92505050949350505050565b600080823b905060008111915050919050565b60608315610dda57829050610e2a565b600083511115610ded5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2191906117c4565b60405180910390fd5b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6182610e36565b9050919050565b610e7181610e56565b8114610e7c57600080fd5b50565b600081359050610e8e81610e68565b92915050565b6000819050919050565b610ea781610e94565b8114610eb257600080fd5b50565b600081359050610ec481610e9e565b92915050565b600080600060608486031215610ee357610ee2610e31565b5b6000610ef186828701610e7f565b9350506020610f0286828701610e7f565b9250506040610f1386828701610eb5565b9150509250925092565b610f2681610e56565b82525050565b6000602082019050610f416000830184610f1d565b92915050565b600060208284031215610f5d57610f5c610e31565b5b6000610f6b84828501610e7f565b91505092915050565b6000610f7f82610e36565b9050919050565b610f8f81610f74565b8114610f9a57600080fd5b50565b600081359050610fac81610f86565b92915050565b60008060408385031215610fc957610fc8610e31565b5b6000610fd785828601610e7f565b9250506020610fe885828601610f9d565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611039602083610ff2565b915061104482611003565b602082019050919050565b600060208201905081810360008301526110688161102c565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006110a5601f83610ff2565b91506110b08261106f565b602082019050919050565b600060208201905081810360008301526110d481611098565b9050919050565b7f557365722069732073656e64696e672045544820616c6f6e672077697468207460008201527f6865204552433230207472616e736665722e0000000000000000000000000000602082015250565b6000611137603283610ff2565b9150611142826110db565b604082019050919050565b600060208201905081810360008301526111668161112a565b9050919050565b7f54686520616d6f756e7420616e64207468652076616c75652073656e7420746f60008201527f206465706f73697420646f206e6f74206d617463680000000000000000000000602082015250565b60006111c9603583610ff2565b91506111d48261116d565b604082019050919050565b600060208201905081810360008301526111f8816111bc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061123982610e94565b915061124483610e94565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611279576112786111ff565b5b828201905092915050565b61128d81610e94565b82525050565b60006040820190506112a86000830185610f1d565b6112b56020830184611284565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611318602683610ff2565b9150611323826112bc565b604082019050919050565b600060208201905081810360008301526113478161130b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600064ffffffffff82169050919050565b60006113998261137d565b91506113a48361137d565b9250828210156113b7576113b66111ff565b5b828203905092915050565b60006113cd82610e94565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611400576113ff6111ff565b5b600182019050919050565b60006060820190506114206000830186610f1d565b61142d6020830185610f1d565b61143a6040830184611284565b949350505050565b600081905092915050565b50565b600061145d600083611442565b91506114688261144d565b600082019050919050565b600061147e82611450565b9150819050919050565b7f5472616e73666572206f6620455448206661696c656400000000000000000000600082015250565b60006114be601683610ff2565b91506114c982611488565b602082019050919050565b600060208201905081810360008301526114ed816114b1565b9050919050565b60008115159050919050565b611509816114f4565b811461151457600080fd5b50565b60008151905061152681611500565b92915050565b60006020828403121561154257611541610e31565b5b600061155084828501611517565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006115b5602a83610ff2565b91506115c082611559565b604082019050919050565b600060208201905081810360008301526115e4816115a8565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611647602683610ff2565b9150611652826115eb565b604082019050919050565b600060208201905081810360008301526116768161163a565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006116b3601d83610ff2565b91506116be8261167d565b602082019050919050565b600060208201905081810360008301526116e2816116a6565b9050919050565b600081519050919050565b60005b838110156117125780820151818401526020810190506116f7565b83811115611721576000848401525b50505050565b6000611732826116e9565b61173c8185611442565b935061174c8185602086016116f4565b80840191505092915050565b60006117648284611727565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006117968261176f565b6117a08185610ff2565b93506117b08185602086016116f4565b6117b98161177a565b840191505092915050565b600060208201905081810360008301526117de818461178b565b90509291505056fea2646970667358221220dafee56bad096673cea36e65321a2a45292f0120cf052808ddacd2a30f7c167064736f6c63430008090033";

export class Escrow__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Escrow> {
    return super.deploy(overrides || {}) as Promise<Escrow>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Escrow {
    return super.attach(address) as Escrow;
  }
  connect(signer: Signer): Escrow__factory {
    return super.connect(signer) as Escrow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new utils.Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Escrow {
    return new Contract(address, _abi, signerOrProvider) as Escrow;
  }
}
