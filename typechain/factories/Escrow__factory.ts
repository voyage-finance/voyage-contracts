/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Escrow, EscrowInterface } from "../Escrow";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611b20806101146000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780638340f549146100665780638da5cb5b14610082578063d9caed12146100ad578063f2fde38b146100d6575b600080fd5b34801561005b57600080fd5b506100646100ff565b005b610080600480360381019061007b91906110f5565b610187565b005b34801561008e57600080fd5b5061009761052e565b6040516100a49190611157565b60405180910390f35b3480156100b957600080fd5b506100d460048036038101906100cf91906111b0565b610557565b005b3480156100e257600080fd5b506100fd60048036038101906100f89190611203565b6109e3565b005b610107610adb565b73ffffffffffffffffffffffffffffffffffffffff1661012561052e565b73ffffffffffffffffffffffffffffffffffffffff161461017b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101729061128d565b60405180910390fd5b6101856000610ae3565b565b600260015414156101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c4906112f9565b60405180910390fd5b60026001819055506101dd610adb565b73ffffffffffffffffffffffffffffffffffffffff166101fb61052e565b73ffffffffffffffffffffffffffffffffffffffff1614610251576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102489061128d565b60405180910390fd5b610259610ba7565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461030057600034146102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c59061138b565b60405180910390fd5b6102fb8230838673ffffffffffffffffffffffffffffffffffffffff16610bc3909392919063ffffffff16565b610343565b803414610342576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103399061141d565b60405180910390fd5b5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103cf919061146c565b92505081905550600060405180604001604052808381526020014264ffffffffff168152509050600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548164ffffffffff021916908364ffffffffff16021790555050508273ffffffffffffffffffffffffffffffffffffffff167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a785846040516105199291906114d1565b60405180910390a25060018081905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61055f610adb565b73ffffffffffffffffffffffffffffffffffffffff1661057d61052e565b73ffffffffffffffffffffffffffffffffffffffff16146105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca9061128d565b60405180910390fd5b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008080600090505b838054905081101561079357600460009054906101000a900464ffffffffff1664ffffffffff16848281548110610696576106956114fa565b5b906000526020600020906002020160010160009054906101000a900464ffffffffff16426106c4919061153a565b64ffffffffff161115610780578381815481106106e4576106e36114fa565b5b90600052602060002090600202016000015483610701919061146c565b9250838181548110610716576107156114fa565b5b906000526020600020906002020160010160009054906101000a900464ffffffffff16915083818154811061074e5761074d6114fa565b5b90600052602060002090600202016000808201600090556001820160006101000a81549064ffffffffff021916905550505b808061078b9061156e565b91505061065c565b50838210156107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90611629565b60405180910390fd5b838211156108ed57600084836107ed9190611649565b9050600060405180604001604052808381526020018464ffffffffff168152509050600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548164ffffffffff021916908364ffffffffff160217905550505050505b83600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109799190611649565b9250508190555061098b868686610c4c565b8473ffffffffffffffffffffffffffffffffffffffff167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb87866040516109d39291906114d1565b60405180910390a2505050505050565b6109eb610adb565b73ffffffffffffffffffffffffffffffffffffffff16610a0961052e565b73ffffffffffffffffffffffffffffffffffffffff1614610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a569061128d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac6906116ef565b60405180910390fd5b610ad881610ae3565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee905090565b610c46846323b872dd60e01b858585604051602401610be49392919061170f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d69565b50505050565b610c54610ba7565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610cb657610cb182828573ffffffffffffffffffffffffffffffffffffffff16610e309092919063ffffffff16565b610d64565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610cdc90611777565b60006040518083038185875af1925050503d8060008114610d19576040519150601f19603f3d011682016040523d82523d6000602084013e610d1e565b606091505b5050905080610d62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d59906117d8565b60405180910390fd5b505b505050565b6000610dcb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610eb69092919063ffffffff16565b9050600081511115610e2b5780806020019051810190610deb9190611830565b610e2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e21906118cf565b60405180910390fd5b5b505050565b610eb18363a9059cbb60e01b8484604051602401610e4f9291906114d1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d69565b505050565b6060610ec58484600085610ece565b90509392505050565b606082471015610f13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0a90611961565b60405180910390fd5b610f1c85610fe2565b610f5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f52906119cd565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610f849190611a5c565b60006040518083038185875af1925050503d8060008114610fc1576040519150601f19603f3d011682016040523d82523d6000602084013e610fc6565b606091505b5091509150610fd6828286610ff5565b92505050949350505050565b600080823b905060008111915050919050565b6060831561100557829050611055565b6000835111156110185782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104c9190611ac8565b60405180910390fd5b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061108c82611061565b9050919050565b61109c81611081565b81146110a757600080fd5b50565b6000813590506110b981611093565b92915050565b6000819050919050565b6110d2816110bf565b81146110dd57600080fd5b50565b6000813590506110ef816110c9565b92915050565b60008060006060848603121561110e5761110d61105c565b5b600061111c868287016110aa565b935050602061112d868287016110aa565b925050604061113e868287016110e0565b9150509250925092565b61115181611081565b82525050565b600060208201905061116c6000830184611148565b92915050565b600061117d82611061565b9050919050565b61118d81611172565b811461119857600080fd5b50565b6000813590506111aa81611184565b92915050565b6000806000606084860312156111c9576111c861105c565b5b60006111d7868287016110aa565b93505060206111e88682870161119b565b92505060406111f9868287016110e0565b9150509250925092565b6000602082840312156112195761121861105c565b5b6000611227848285016110aa565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611277602083611230565b915061128282611241565b602082019050919050565b600060208201905081810360008301526112a68161126a565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006112e3601f83611230565b91506112ee826112ad565b602082019050919050565b60006020820190508181036000830152611312816112d6565b9050919050565b7f557365722069732073656e64696e672045544820616c6f6e672077697468207460008201527f6865204552433230207472616e736665722e0000000000000000000000000000602082015250565b6000611375603283611230565b915061138082611319565b604082019050919050565b600060208201905081810360008301526113a481611368565b9050919050565b7f54686520616d6f756e7420616e64207468652076616c75652073656e7420746f60008201527f206465706f73697420646f206e6f74206d617463680000000000000000000000602082015250565b6000611407603583611230565b9150611412826113ab565b604082019050919050565b60006020820190508181036000830152611436816113fa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611477826110bf565b9150611482836110bf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114b7576114b661143d565b5b828201905092915050565b6114cb816110bf565b82525050565b60006040820190506114e66000830185611148565b6114f360208301846114c2565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600064ffffffffff82169050919050565b600061154582611529565b915061155083611529565b9250828210156115635761156261143d565b5b828203905092915050565b6000611579826110bf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115ac576115ab61143d565b5b600182019050919050565b7f446f206e6f74206861766520656e6f75676820616d6f756e7420746f2077697460008201527f6864726177000000000000000000000000000000000000000000000000000000602082015250565b6000611613602583611230565b915061161e826115b7565b604082019050919050565b6000602082019050818103600083015261164281611606565b9050919050565b6000611654826110bf565b915061165f836110bf565b9250828210156116725761167161143d565b5b828203905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006116d9602683611230565b91506116e48261167d565b604082019050919050565b60006020820190508181036000830152611708816116cc565b9050919050565b60006060820190506117246000830186611148565b6117316020830185611148565b61173e60408301846114c2565b949350505050565b600081905092915050565b50565b6000611761600083611746565b915061176c82611751565b600082019050919050565b600061178282611754565b9150819050919050565b7f5472616e73666572206f6620455448206661696c656400000000000000000000600082015250565b60006117c2601683611230565b91506117cd8261178c565b602082019050919050565b600060208201905081810360008301526117f1816117b5565b9050919050565b60008115159050919050565b61180d816117f8565b811461181857600080fd5b50565b60008151905061182a81611804565b92915050565b6000602082840312156118465761184561105c565b5b60006118548482850161181b565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006118b9602a83611230565b91506118c48261185d565b604082019050919050565b600060208201905081810360008301526118e8816118ac565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061194b602683611230565b9150611956826118ef565b604082019050919050565b6000602082019050818103600083015261197a8161193e565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006119b7601d83611230565b91506119c282611981565b602082019050919050565b600060208201905081810360008301526119e6816119aa565b9050919050565b600081519050919050565b60005b83811015611a165780820151818401526020810190506119fb565b83811115611a25576000848401525b50505050565b6000611a36826119ed565b611a408185611746565b9350611a508185602086016119f8565b80840191505092915050565b6000611a688284611a2b565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611a9a82611a73565b611aa48185611230565b9350611ab48185602086016119f8565b611abd81611a7e565b840191505092915050565b60006020820190508181036000830152611ae28184611a8f565b90509291505056fea264697066735822122051b058de902cfb041bbdd6a049c0dfd651f363b99dc966ec0399e51f878fd51e64736f6c63430008090033";

export class Escrow__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Escrow> {
    return super.deploy(overrides || {}) as Promise<Escrow>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Escrow {
    return super.attach(address) as Escrow;
  }
  connect(signer: Signer): Escrow__factory {
    return super.connect(signer) as Escrow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new utils.Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Escrow {
    return new Contract(address, _abi, signerOrProvider) as Escrow;
  }
}
