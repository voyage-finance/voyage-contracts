/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsDistribution",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600555600060065562093a806007553480156200002257600080fd5b5060405162001e3138038062001e31833981810160405281019062000048919062000200565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160028190555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200025c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c8826200019b565b9050919050565b620001da81620001bb565b8114620001e657600080fd5b50565b600081519050620001fa81620001cf565b92915050565b6000806000606084860312156200021c576200021b62000196565b5b60006200022c86828701620001e9565b93505060206200023f86828701620001e9565b92505060406200025286828701620001e9565b9150509250925092565b611bc5806200026c6000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c806380faa57d116100b8578063cd3daf9d1161007c578063cd3daf9d14610330578063d1af0c7d1461034e578063df136d651461036c578063e30c39781461038a578063ebe2b12b146103a8578063f2fde38b146103c657610141565b806380faa57d1461029c5780638da5cb5b146102ba5780638f32d59b146102d8578063c8f33c91146102f6578063cc1a378f1461031457610141565b80633c6b16ab1161010a5780633c6b16ab146102005780633d18b9121461021c5780634e71e0c81461022657806370a082311461023057806372f702f3146102605780637b0a47ee1461027e57610141565b80628cc262146101465780630700037d1461017657806318160ddd146101a65780631c1f78eb146101c4578063386a9525146101e2575b600080fd5b610160600480360381019061015b919061131f565b6103e2565b60405161016d9190611365565b60405180910390f35b610190600480360381019061018b919061131f565b610500565b60405161019d9190611365565b60405180910390f35b6101ae610518565b6040516101bb9190611365565b60405180910390f35b6101cc610522565b6040516101d99190611365565b60405180910390f35b6101ea610540565b6040516101f79190611365565b60405180910390f35b61021a600480360381019061021591906113ac565b610546565b005b61022461081c565b005b61022e610a86565b005b61024a6004803603810190610245919061131f565b610c22565b6040516102579190611365565b60405180910390f35b610268610c6b565b6040516102759190611438565b60405180910390f35b610286610c91565b6040516102939190611365565b60405180910390f35b6102a4610c97565b6040516102b19190611365565b60405180910390f35b6102c2610cb1565b6040516102cf9190611462565b60405180910390f35b6102e0610cd5565b6040516102ed9190611498565b60405180910390f35b6102fe610d2c565b60405161030b9190611365565b60405180910390f35b61032e600480360381019061032991906113ac565b610d32565b005b610338610e00565b6040516103459190611365565b60405180910390f35b610356610e8e565b6040516103639190611438565b60405180910390f35b610374610eb4565b6040516103819190611365565b60405180910390f35b610392610eba565b60405161039f9190611462565b60405180910390f35b6103b0610ee0565b6040516103bd9190611365565b60405180910390f35b6103e060048036038101906103db919061131f565b610ee6565b005b60006104f9600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104eb670de0b6b3a76400006104dd61048f600a60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610481610e00565b610f7190919063ffffffff16565b600d60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f8790919063ffffffff16565b610f9d90919063ffffffff16565b610fb390919063ffffffff16565b9050919050565b600b6020528060005260406000206000915090505481565b6000600c54905090565b600061053b600754600654610f8790919063ffffffff16565b905090565b60075481565b6000610550610e00565b60098190555061055e610c97565b600881905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461062b576105a1816103e2565b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600954600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60055442106106545761064960075483610f9d90919063ffffffff16565b6006819055506106b6565b600061066b42600554610f7190919063ffffffff16565b9050600061068460065483610f8790919063ffffffff16565b90506106ad60075461069f8387610fb390919063ffffffff16565b610f9d90919063ffffffff16565b60068190555050505b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107139190611462565b60206040518083038186803b15801561072b57600080fd5b505afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076391906114c8565b905061077a60075482610f9d90919063ffffffff16565b60065411156107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590611552565b60405180910390fd5b426008819055506107da60075442610fb390919063ffffffff16565b6005819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d8360405161080f9190611365565b60405180910390a1505050565b600280541415610861576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610858906115be565b60405180910390fd5b6002808190555033610871610e00565b60098190555061087f610c97565b600881905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461094c576108c2816103e2565b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600954600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610a7a576000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a2b3382600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fc99092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610a719190611365565b60405180910390a25b50506001600281905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae057600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60006005544210610caa57600554610cac565b425b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60085481565b610d3a610cd5565b610d79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d709061162a565b60405180910390fd5b6005544211610dbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db4906116e2565b60405180910390fd5b806007819055507ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3600754604051610df59190611365565b60405180910390a150565b600080600c541415610e16576009549050610e8b565b610e88610e77600c54610e69670de0b6b3a7640000610e5b600654610e4d600854610e3f610c97565b610f7190919063ffffffff16565b610f8790919063ffffffff16565b610f8790919063ffffffff16565b610f9d90919063ffffffff16565b600954610fb390919063ffffffff16565b90505b90565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b610eee610cd5565b610f2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f249061162a565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008183610f7f9190611731565b905092915050565b60008183610f959190611765565b905092915050565b60008183610fab91906117ee565b905092915050565b60008183610fc1919061181f565b905092915050565b61104a8363a9059cbb60e01b8484604051602401610fe8929190611875565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061104f565b505050565b60006110b1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111169092919063ffffffff16565b905060008151111561111157808060200190518101906110d191906118ca565b611110576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110790611969565b60405180910390fd5b5b505050565b6060611125848460008561112e565b90509392505050565b606082471015611173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116a906119fb565b60405180910390fd5b61117c85611242565b6111bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b290611a67565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516111e49190611b01565b60006040518083038185875af1925050503d8060008114611221576040519150601f19603f3d011682016040523d82523d6000602084013e611226565b606091505b5091509150611236828286611255565b92505050949350505050565b600080823b905060008111915050919050565b60608315611265578290506112b5565b6000835111156112785782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ac9190611b6d565b60405180910390fd5b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112ec826112c1565b9050919050565b6112fc816112e1565b811461130757600080fd5b50565b600081359050611319816112f3565b92915050565b600060208284031215611335576113346112bc565b5b60006113438482850161130a565b91505092915050565b6000819050919050565b61135f8161134c565b82525050565b600060208201905061137a6000830184611356565b92915050565b6113898161134c565b811461139457600080fd5b50565b6000813590506113a681611380565b92915050565b6000602082840312156113c2576113c16112bc565b5b60006113d084828501611397565b91505092915050565b6000819050919050565b60006113fe6113f96113f4846112c1565b6113d9565b6112c1565b9050919050565b6000611410826113e3565b9050919050565b600061142282611405565b9050919050565b61143281611417565b82525050565b600060208201905061144d6000830184611429565b92915050565b61145c816112e1565b82525050565b60006020820190506114776000830184611453565b92915050565b60008115159050919050565b6114928161147d565b82525050565b60006020820190506114ad6000830184611489565b92915050565b6000815190506114c281611380565b92915050565b6000602082840312156114de576114dd6112bc565b5b60006114ec848285016114b3565b91505092915050565b600082825260208201905092915050565b7f50726f76696465642072657761726420746f6f20686967680000000000000000600082015250565b600061153c6018836114f5565b915061154782611506565b602082019050919050565b6000602082019050818103600083015261156b8161152f565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006115a8601f836114f5565b91506115b382611572565b602082019050919050565b600060208201905081810360008301526115d78161159b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116146020836114f5565b915061161f826115de565b602082019050919050565b6000602082019050818103600083015261164381611607565b9050919050565b7f50726576696f7573207265776172647320706572696f64206d7573742062652060008201527f636f6d706c657465206265666f7265206368616e67696e67207468652064757260208201527f6174696f6e20666f7220746865206e657720706572696f640000000000000000604082015250565b60006116cc6058836114f5565b91506116d78261164a565b606082019050919050565b600060208201905081810360008301526116fb816116bf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061173c8261134c565b91506117478361134c565b92508282101561175a57611759611702565b5b828203905092915050565b60006117708261134c565b915061177b8361134c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117b4576117b3611702565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117f98261134c565b91506118048361134c565b925082611814576118136117bf565b5b828204905092915050565b600061182a8261134c565b91506118358361134c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561186a57611869611702565b5b828201905092915050565b600060408201905061188a6000830185611453565b6118976020830184611356565b9392505050565b6118a78161147d565b81146118b257600080fd5b50565b6000815190506118c48161189e565b92915050565b6000602082840312156118e0576118df6112bc565b5b60006118ee848285016118b5565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611953602a836114f5565b915061195e826118f7565b604082019050919050565b6000602082019050818103600083015261198281611946565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006119e56026836114f5565b91506119f082611989565b604082019050919050565b60006020820190508181036000830152611a14816119d8565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611a51601d836114f5565b9150611a5c82611a1b565b602082019050919050565b60006020820190508181036000830152611a8081611a44565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611abb578082015181840152602081019050611aa0565b83811115611aca576000848401525b50505050565b6000611adb82611a87565b611ae58185611a92565b9350611af5818560208601611a9d565b80840191505092915050565b6000611b0d8284611ad0565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611b3f82611b18565b611b4981856114f5565b9350611b59818560208601611a9d565b611b6281611b23565b840191505092915050565b60006020820190508181036000830152611b878184611b34565b90509291505056fea26469706673582212207296286b8f700b60e21071fcad21df1f1688d64f06c778a74606979f3d1b675664736f6c63430008090033";

export class StakingRewards__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardsDistribution: string,
    _stakingToken: string,
    _rewardsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _rewardsDistribution,
      _stakingToken,
      _rewardsToken,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  getDeployTransaction(
    _rewardsDistribution: string,
    _stakingToken: string,
    _rewardsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardsDistribution,
      _stakingToken,
      _rewardsToken,
      overrides || {}
    );
  }
  attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
