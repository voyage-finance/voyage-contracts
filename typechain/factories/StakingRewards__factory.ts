/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsDistribution",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDistribution",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsDistribution",
        type: "address",
      },
    ],
    name: "setRewardsDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600655600060075562093a806008553480156200002257600080fd5b506040516200205438038062002054833981810160405281019062000048919062000200565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160028190555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200025c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c8826200019b565b9050919050565b620001da81620001bb565b8114620001e657600080fd5b50565b600081519050620001fa81620001cf565b92915050565b6000806000606084860312156200021c576200021b62000196565b5b60006200022c86828701620001e9565b93505060206200023f86828701620001e9565b92505060406200025286828701620001e9565b9150509250925092565b611de8806200026c6000396000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c80637b0a47ee116100c3578063cd3daf9d1161007c578063cd3daf9d14610380578063d1af0c7d1461039e578063df136d65146103bc578063e30c3978146103da578063ebe2b12b146103f8578063f2fde38b1461041657610157565b80637b0a47ee146102ce57806380faa57d146102ec5780638da5cb5b1461030a5780638f32d59b14610328578063c8f33c9114610346578063cc1a378f1461036457610157565b80633c6b16ab116101155780633c6b16ab146102325780633d18b9121461024e5780633fc6df6e146102585780634e71e0c81461027657806370a082311461028057806372f702f3146102b057610157565b80628cc2621461015c5780630700037d1461018c57806318160ddd146101bc57806319762143146101da5780631c1f78eb146101f6578063386a952514610214575b600080fd5b610176600480360381019061017191906114b0565b610432565b60405161018391906114f6565b60405180910390f35b6101a660048036038101906101a191906114b0565b610550565b6040516101b391906114f6565b60405180910390f35b6101c4610568565b6040516101d191906114f6565b60405180910390f35b6101f460048036038101906101ef91906114b0565b610572565b005b6101fe6105fd565b60405161020b91906114f6565b60405180910390f35b61021c61061b565b60405161022991906114f6565b60405180910390f35b61024c6004803603810190610247919061153d565b610621565b005b610256610987565b005b610260610bf1565b60405161026d9190611579565b60405180910390f35b61027e610c17565b005b61029a600480360381019061029591906114b0565b610db3565b6040516102a791906114f6565b60405180910390f35b6102b8610dfc565b6040516102c591906115f3565b60405180910390f35b6102d6610e22565b6040516102e391906114f6565b60405180910390f35b6102f4610e28565b60405161030191906114f6565b60405180910390f35b610312610e42565b60405161031f9190611579565b60405180910390f35b610330610e66565b60405161033d9190611629565b60405180910390f35b61034e610ebd565b60405161035b91906114f6565b60405180910390f35b61037e6004803603810190610379919061153d565b610ec3565b005b610388610f91565b60405161039591906114f6565b60405180910390f35b6103a661101f565b6040516103b391906115f3565b60405180910390f35b6103c4611045565b6040516103d191906114f6565b60405180910390f35b6103e261104b565b6040516103ef9190611579565b60405180910390f35b610400611071565b60405161040d91906114f6565b60405180910390f35b610430600480360381019061042b91906114b0565b611077565b005b6000610549600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461053b670de0b6b3a764000061052d6104df600b60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104d1610f91565b61110290919063ffffffff16565b600e60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461111890919063ffffffff16565b61112e90919063ffffffff16565b61114490919063ffffffff16565b9050919050565b600c6020528060005260406000206000915090505481565b6000600d54905090565b61057a610e66565b6105b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b0906116a1565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061061660085460075461111890919063ffffffff16565b905090565b60085481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a890611733565b60405180910390fd5b60006106bb610f91565b600a819055506106c9610e28565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107965761070c81610432565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60065442106107bf576107b46008548361112e90919063ffffffff16565b600781905550610821565b60006107d64260065461110290919063ffffffff16565b905060006107ef6007548361111890919063ffffffff16565b905061081860085461080a838761114490919063ffffffff16565b61112e90919063ffffffff16565b60078190555050505b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161087e9190611579565b60206040518083038186803b15801561089657600080fd5b505afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce9190611768565b90506108e56008548261112e90919063ffffffff16565b6007541115610929576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610920906117e1565b60405180910390fd5b426009819055506109456008544261114490919063ffffffff16565b6006819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d8360405161097a91906114f6565b60405180910390a1505050565b6002805414156109cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c39061184d565b60405180910390fd5b60028081905550336109dc610f91565b600a819055506109ea610e28565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ab757610a2d81610432565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610be5576000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b963382600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661115a9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610bdc91906114f6565b60405180910390a25b50506001600281905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c7157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60006006544210610e3b57600654610e3d565b425b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60095481565b610ecb610e66565b610f0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f01906116a1565b60405180910390fd5b6006544211610f4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4590611905565b60405180910390fd5b806008819055507ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3600854604051610f8691906114f6565b60405180910390a150565b600080600d541415610fa757600a54905061101c565b611019611008600d54610ffa670de0b6b3a7640000610fec600754610fde600954610fd0610e28565b61110290919063ffffffff16565b61111890919063ffffffff16565b61111890919063ffffffff16565b61112e90919063ffffffff16565b600a5461114490919063ffffffff16565b90505b90565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b61107f610e66565b6110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b5906116a1565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081836111109190611954565b905092915050565b600081836111269190611988565b905092915050565b6000818361113c9190611a11565b905092915050565b600081836111529190611a42565b905092915050565b6111db8363a9059cbb60e01b8484604051602401611179929190611a98565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506111e0565b505050565b6000611242826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112a79092919063ffffffff16565b90506000815111156112a257808060200190518101906112629190611aed565b6112a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129890611b8c565b60405180910390fd5b5b505050565b60606112b684846000856112bf565b90509392505050565b606082471015611304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fb90611c1e565b60405180910390fd5b61130d856113d3565b61134c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134390611c8a565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516113759190611d24565b60006040518083038185875af1925050503d80600081146113b2576040519150601f19603f3d011682016040523d82523d6000602084013e6113b7565b606091505b50915091506113c78282866113e6565b92505050949350505050565b600080823b905060008111915050919050565b606083156113f657829050611446565b6000835111156114095782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143d9190611d90565b60405180910390fd5b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061147d82611452565b9050919050565b61148d81611472565b811461149857600080fd5b50565b6000813590506114aa81611484565b92915050565b6000602082840312156114c6576114c561144d565b5b60006114d48482850161149b565b91505092915050565b6000819050919050565b6114f0816114dd565b82525050565b600060208201905061150b60008301846114e7565b92915050565b61151a816114dd565b811461152557600080fd5b50565b60008135905061153781611511565b92915050565b6000602082840312156115535761155261144d565b5b600061156184828501611528565b91505092915050565b61157381611472565b82525050565b600060208201905061158e600083018461156a565b92915050565b6000819050919050565b60006115b96115b46115af84611452565b611594565b611452565b9050919050565b60006115cb8261159e565b9050919050565b60006115dd826115c0565b9050919050565b6115ed816115d2565b82525050565b600060208201905061160860008301846115e4565b92915050565b60008115159050919050565b6116238161160e565b82525050565b600060208201905061163e600083018461161a565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061168b602083611644565b915061169682611655565b602082019050919050565b600060208201905081810360008301526116ba8161167e565b9050919050565b7f43616c6c6572206973206e6f742052657761726473446973747269627574696f60008201527f6e20636f6e747261637400000000000000000000000000000000000000000000602082015250565b600061171d602a83611644565b9150611728826116c1565b604082019050919050565b6000602082019050818103600083015261174c81611710565b9050919050565b60008151905061176281611511565b92915050565b60006020828403121561177e5761177d61144d565b5b600061178c84828501611753565b91505092915050565b7f50726f76696465642072657761726420746f6f20686967680000000000000000600082015250565b60006117cb601883611644565b91506117d682611795565b602082019050919050565b600060208201905081810360008301526117fa816117be565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611837601f83611644565b915061184282611801565b602082019050919050565b600060208201905081810360008301526118668161182a565b9050919050565b7f50726576696f7573207265776172647320706572696f64206d7573742062652060008201527f636f6d706c657465206265666f7265206368616e67696e67207468652064757260208201527f6174696f6e20666f7220746865206e657720706572696f640000000000000000604082015250565b60006118ef605883611644565b91506118fa8261186d565b606082019050919050565b6000602082019050818103600083015261191e816118e2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061195f826114dd565b915061196a836114dd565b92508282101561197d5761197c611925565b5b828203905092915050565b6000611993826114dd565b915061199e836114dd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119d7576119d6611925565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a1c826114dd565b9150611a27836114dd565b925082611a3757611a366119e2565b5b828204905092915050565b6000611a4d826114dd565b9150611a58836114dd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a8d57611a8c611925565b5b828201905092915050565b6000604082019050611aad600083018561156a565b611aba60208301846114e7565b9392505050565b611aca8161160e565b8114611ad557600080fd5b50565b600081519050611ae781611ac1565b92915050565b600060208284031215611b0357611b0261144d565b5b6000611b1184828501611ad8565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611b76602a83611644565b9150611b8182611b1a565b604082019050919050565b60006020820190508181036000830152611ba581611b69565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611c08602683611644565b9150611c1382611bac565b604082019050919050565b60006020820190508181036000830152611c3781611bfb565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611c74601d83611644565b9150611c7f82611c3e565b602082019050919050565b60006020820190508181036000830152611ca381611c67565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611cde578082015181840152602081019050611cc3565b83811115611ced576000848401525b50505050565b6000611cfe82611caa565b611d088185611cb5565b9350611d18818560208601611cc0565b80840191505092915050565b6000611d308284611cf3565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611d6282611d3b565b611d6c8185611644565b9350611d7c818560208601611cc0565b611d8581611d46565b840191505092915050565b60006020820190508181036000830152611daa8184611d57565b90509291505056fea264697066735822122061a1960ae62bf35521c63eaca712d2364ea453f0454c11dcc39e517b0a8c7a2364736f6c63430008090033";

export class StakingRewards__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardsDistribution: string,
    _stakingToken: string,
    _rewardsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _rewardsDistribution,
      _stakingToken,
      _rewardsToken,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  getDeployTransaction(
    _rewardsDistribution: string,
    _stakingToken: string,
    _rewardsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardsDistribution,
      _stakingToken,
      _rewardsToken,
      overrides || {}
    );
  }
  attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
