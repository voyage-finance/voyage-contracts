/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VaultManager, VaultManagerInterface } from "../VaultManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_voyager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "VaultCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allVaults",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllCreditAccount",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getCreditAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voyager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d82380380610d82833981810160405281019061003291906100dc565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b6100b98161009e565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f1610079565b5b6000610100848285016100c7565b91505092915050565b610c6a806101186000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063084b0a97146100675780630eb9af38146100975780639094a91e146100c75780639859387b146100f7578063eb67031514610127578063f448e14014610145575b600080fd5b610081600480360381019061007c91906105fb565b610163565b60405161008e9190610637565b60405180910390f35b6100b160048036038101906100ac91906105fb565b6101cc565b6040516100be9190610637565b60405180910390f35b6100e160048036038101906100dc9190610688565b6101ff565b6040516100ee9190610637565b60405180910390f35b610111600480360381019061010c91906105fb565b61023e565b60405161011e9190610637565b60405180910390f35b61012f6104d7565b60405161013c9190610773565b60405180910390f35b61014d610565565b60405161015a9190610637565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061020f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c7906107f2565b60405180910390fd5b6000604051806020016102e29061058b565b6020820181038252601f19601f82011660405250905060008360405160200161030b919061085a565b604051602081830303815290604052805190602001209050808251602084016000f592508273ffffffffffffffffffffffffffffffffffffffff1663c4d66de8856040518263ffffffff1660e01b81526004016103689190610637565b600060405180830381600087803b15801561038257600080fd5b505af1158015610396573d6000803e3d6000fd5b505050506000839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff167f0b045af6aff86dd2cda5342fd0329a354dc66759ff1eda00d7ecf13a76c7fb3b846000805490506040516104c8929190610884565b60405180910390a25050919050565b6060600080548060200260200160405190810160405280929190818152602001828054801561055b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610511575b5050505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610387806108ae83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c88261059d565b9050919050565b6105d8816105bd565b81146105e357600080fd5b50565b6000813590506105f5816105cf565b92915050565b60006020828403121561061157610610610598565b5b600061061f848285016105e6565b91505092915050565b610631816105bd565b82525050565b600060208201905061064c6000830184610628565b92915050565b6000819050919050565b61066581610652565b811461067057600080fd5b50565b6000813590506106828161065c565b92915050565b60006020828403121561069e5761069d610598565b5b60006106ac84828501610673565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6106ea816105bd565b82525050565b60006106fc83836106e1565b60208301905092915050565b6000602082019050919050565b6000610720826106b5565b61072a81856106c0565b9350610735836106d1565b8060005b8381101561076657815161074d88826106f0565b975061075883610708565b925050600181019050610739565b5085935050505092915050565b6000602082019050818103600083015261078d8184610715565b905092915050565b600082825260208201905092915050565b7f5468652063616c6c6572206d757374206265206120766f796167657200000000600082015250565b60006107dc601c83610795565b91506107e7826107a6565b602082019050919050565b6000602082019050818103600083015261080b816107cf565b9050919050565b60008160601b9050919050565b600061082a82610812565b9050919050565b600061083c8261081f565b9050919050565b61085461084f826105bd565b610831565b82525050565b60006108668284610843565b60148201915081905092915050565b61087e81610652565b82525050565b60006040820190506108996000830185610628565b6108a66020830184610875565b939250505056fe608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610327806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806348db5f8914610046578063c45a015514610064578063c4d66de814610082575b600080fd5b61004e61009e565b60405161005b91906101fb565b60405180910390f35b61006c6100c4565b60405161007991906101fb565b60405180910390f35b61009c60048036038101906100979190610247565b6100e8565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016d906102d1565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101e5826101ba565b9050919050565b6101f5816101da565b82525050565b600060208201905061021060008301846101ec565b92915050565b600080fd5b610224816101da565b811461022f57600080fd5b50565b6000813590506102418161021b565b92915050565b60006020828403121561025d5761025c610216565b5b600061026b84828501610232565b91505092915050565b600082825260208201905092915050565b7f566f79616765723a20464f5242494444454e0000000000000000000000000000600082015250565b60006102bb601283610274565b91506102c682610285565b602082019050919050565b600060208201905081810360008301526102ea816102ae565b905091905056fea264697066735822122043deea683f85bc2b05520d35b22f564840bcd4073cbe58f5b8708e097c75a8ef64736f6c63430008090033a2646970667358221220d0be6585c9a6b34bf91b762b7b8a34556b73a65a5e2f6e3b1ebb7d00a3767fdf64736f6c63430008090033";

export class VaultManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _voyager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultManager> {
    return super.deploy(_voyager, overrides || {}) as Promise<VaultManager>;
  }
  getDeployTransaction(
    _voyager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_voyager, overrides || {});
  }
  attach(address: string): VaultManager {
    return super.attach(address) as VaultManager;
  }
  connect(signer: Signer): VaultManager__factory {
    return super.connect(signer) as VaultManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultManagerInterface {
    return new utils.Interface(_abi) as VaultManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultManager {
    return new Contract(address, _abi, signerOrProvider) as VaultManager;
  }
}
