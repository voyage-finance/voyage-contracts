/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VaultManager, VaultManagerInterface } from "../VaultManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_voyager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "VaultCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressResolver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "voyager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161131d38038061131d833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b611206806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063133572ba1461003b578063f448e1401461006b575b600080fd5b6100556004803603810190610050919061051d565b610089565b604051610062919061056c565b60405180910390f35b6100736102d4565b604051610080919061056c565b60405180910390f35b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610119576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610110906105e4565b60405180910390fd5b60006040518060200161012b906104ad565b6020820181038252601f19601f820116604052509050600083604051602001610154919061064c565b604051602081830303815290604052805190602001209050808251602084016000f592508273ffffffffffffffffffffffffffffffffffffffff1663c4d66de8856040518263ffffffff1660e01b81526004016101b1919061056c565b600060405180830381600087803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b5050505060006101ed6102f8565b73ffffffffffffffffffffffffffffffffffffffff1663a3fdd98f86866040518363ffffffff1660e01b8152600401610227929190610667565b602060405180830381600087803b15801561024157600080fd5b505af1158015610255573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027991906106c6565b90508473ffffffffffffffffffffffffffffffffffffffff167f0b045af6aff86dd2cda5342fd0329a354dc66759ff1eda00d7ecf13a76c7fb3b85836040516102c3929190610702565b60405180910390a250505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166394f674436040518163ffffffff1660e01b815260040160206040518083038186803b15801561036657600080fd5b505afa15801561037a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039e9190610740565b90508073ffffffffffffffffffffffffffffffffffffffff166321f8a7218373ffffffffffffffffffffffffffffffffffffffff1663283761a46040518163ffffffff1660e01b815260040160206040518083038186803b15801561040257600080fd5b505afa158015610416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043a91906107a3565b6040518263ffffffff1660e01b815260040161045691906107df565b60206040518083038186803b15801561046e57600080fd5b505afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190610740565b9250505090565b6109d6806107fb83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104ea826104bf565b9050919050565b6104fa816104df565b811461050557600080fd5b50565b600081359050610517816104f1565b92915050565b60008060408385031215610534576105336104ba565b5b600061054285828601610508565b925050602061055385828601610508565b9150509250929050565b610566816104df565b82525050565b6000602082019050610581600083018461055d565b92915050565b600082825260208201905092915050565b7f5468652063616c6c6572206d757374206265206120766f796167657200000000600082015250565b60006105ce601c83610587565b91506105d982610598565b602082019050919050565b600060208201905081810360008301526105fd816105c1565b9050919050565b60008160601b9050919050565b600061061c82610604565b9050919050565b600061062e82610611565b9050919050565b610646610641826104df565b610623565b82525050565b60006106588284610635565b60148201915081905092915050565b600060408201905061067c600083018561055d565b610689602083018461055d565b9392505050565b6000819050919050565b6106a381610690565b81146106ae57600080fd5b50565b6000815190506106c08161069a565b92915050565b6000602082840312156106dc576106db6104ba565b5b60006106ea848285016106b1565b91505092915050565b6106fc81610690565b82525050565b6000604082019050610717600083018561055d565b61072460208301846106f3565b9392505050565b60008151905061073a816104f1565b92915050565b600060208284031215610756576107556104ba565b5b60006107648482850161072b565b91505092915050565b6000819050919050565b6107808161076d565b811461078b57600080fd5b50565b60008151905061079d81610777565b92915050565b6000602082840312156107b9576107b86104ba565b5b60006107c78482850161078e565b91505092915050565b6107d98161076d565b82525050565b60006020820190506107f460008301846107d0565b9291505056fe608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a333600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108ba8061011c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638f32d59b116100665780638f32d59b146100fa578063c45a015514610118578063e30c397814610136578063f2fde38b14610154578063f71d96cb1461017057610093565b806305a2ee2a14610098578063485cc955146100b65780634e71e0c8146100d25780638da5cb5b146100dc575b600080fd5b6100a06101a0565b6040516100ad9190610649565b60405180910390f35b6100d060048036038101906100cb9190610695565b6101c6565b005b6100da6102db565b005b6100e4610477565b6040516100f19190610649565b60405180910390f35b61010261049b565b60405161010f91906106f0565b60405180910390f35b6101206104f2565b60405161012d9190610649565b60405180910390f35b61013e610518565b60405161014b9190610649565b60405180910390f35b61016e6004803603810190610169919061070b565b61053e565b005b61018a6004803603810190610185919061076e565b6105c9565b6040516101979190610649565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024d906107f8565b60405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61054661049b565b610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c90610864565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600481815481106105d957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061063382610608565b9050919050565b61064381610628565b82525050565b600060208201905061065e600083018461063a565b92915050565b600080fd5b61067281610628565b811461067d57600080fd5b50565b60008135905061068f81610669565b92915050565b600080604083850312156106ac576106ab610664565b5b60006106ba85828601610680565b92505060206106cb85828601610680565b9150509250929050565b60008115159050919050565b6106ea816106d5565b82525050565b600060208201905061070560008301846106e1565b92915050565b60006020828403121561072157610720610664565b5b600061072f84828501610680565b91505092915050565b6000819050919050565b61074b81610738565b811461075657600080fd5b50565b60008135905061076881610742565b92915050565b60006020828403121561078457610783610664565b5b600061079284828501610759565b91505092915050565b600082825260208201905092915050565b7f566f7961676572205661756c743a20464f5242494444454e0000000000000000600082015250565b60006107e260188361079b565b91506107ed826107ac565b602082019050919050565b60006020820190508181036000830152610811816107d5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061084e60208361079b565b915061085982610818565b602082019050919050565b6000602082019050818103600083015261087d81610841565b905091905056fea2646970667358221220980e78bf5d130fd632a2fb0e2c6eb2ed8523079d3817d82d79619163c08d44ac64736f6c63430008090033a2646970667358221220d17e7514a35f2224fb517dacbdf68089eb2fbc0105d5e3ed94b8a8bdd086b0e164736f6c63430008090033";

export class VaultManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _voyager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultManager> {
    return super.deploy(_voyager, overrides || {}) as Promise<VaultManager>;
  }
  getDeployTransaction(
    _voyager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_voyager, overrides || {});
  }
  attach(address: string): VaultManager {
    return super.attach(address) as VaultManager;
  }
  connect(signer: Signer): VaultManager__factory {
    return super.connect(signer) as VaultManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultManagerInterface {
    return new utils.Interface(_abi) as VaultManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultManager {
    return new Contract(address, _abi, signerOrProvider) as VaultManager;
  }
}
