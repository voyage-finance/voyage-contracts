/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VaultManager, VaultManagerInterface } from "../VaultManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "VaultCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allVaults",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllCreditAccount",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getCreditAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b0d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063084b0a971461005c5780630eb9af381461008c5780639094a91e146100bc5780639859387b146100ec578063eb6703151461011c575b600080fd5b6100766004803603810190610071919061051b565b61013a565b6040516100839190610557565b60405180910390f35b6100a660048036038101906100a1919061051b565b6101a3565b6040516100b39190610557565b60405180910390f35b6100d660048036038101906100d191906105a8565b6101d6565b6040516100e39190610557565b60405180910390f35b6101066004803603810190610101919061051b565b610215565b6040516101139190610557565b60405180910390f35b61012461041d565b6040516101319190610693565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081815481106101e657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060405180602001610228906104ab565b6020820181038252601f19601f82011660405250905060008360405160200161025191906106fd565b604051602081830303815290604052805190602001209050808251602084016000f592508273ffffffffffffffffffffffffffffffffffffffff1663c4d66de8856040518263ffffffff1660e01b81526004016102ae9190610557565b600060405180830381600087803b1580156102c857600080fd5b505af11580156102dc573d6000803e3d6000fd5b505050506000839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff167f0b045af6aff86dd2cda5342fd0329a354dc66759ff1eda00d7ecf13a76c7fb3b8460008054905060405161040e929190610727565b60405180910390a25050919050565b606060008054806020026020016040519081016040528092919081815260200182805480156104a157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610457575b5050505050905090565b6103878061075183390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104e8826104bd565b9050919050565b6104f8816104dd565b811461050357600080fd5b50565b600081359050610515816104ef565b92915050565b600060208284031215610531576105306104b8565b5b600061053f84828501610506565b91505092915050565b610551816104dd565b82525050565b600060208201905061056c6000830184610548565b92915050565b6000819050919050565b61058581610572565b811461059057600080fd5b50565b6000813590506105a28161057c565b92915050565b6000602082840312156105be576105bd6104b8565b5b60006105cc84828501610593565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61060a816104dd565b82525050565b600061061c8383610601565b60208301905092915050565b6000602082019050919050565b6000610640826105d5565b61064a81856105e0565b9350610655836105f1565b8060005b8381101561068657815161066d8882610610565b975061067883610628565b925050600181019050610659565b5085935050505092915050565b600060208201905081810360008301526106ad8184610635565b905092915050565b60008160601b9050919050565b60006106cd826106b5565b9050919050565b60006106df826106c2565b9050919050565b6106f76106f2826104dd565b6106d4565b82525050565b600061070982846106e6565b60148201915081905092915050565b61072181610572565b82525050565b600060408201905061073c6000830185610548565b6107496020830184610718565b939250505056fe608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610327806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806348db5f8914610046578063c45a015514610064578063c4d66de814610082575b600080fd5b61004e61009e565b60405161005b91906101fb565b60405180910390f35b61006c6100c4565b60405161007991906101fb565b60405180910390f35b61009c60048036038101906100979190610247565b6100e8565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016d906102d1565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101e5826101ba565b9050919050565b6101f5816101da565b82525050565b600060208201905061021060008301846101ec565b92915050565b600080fd5b610224816101da565b811461022f57600080fd5b50565b6000813590506102418161021b565b92915050565b60006020828403121561025d5761025c610216565b5b600061026b84828501610232565b91505092915050565b600082825260208201905092915050565b7f566f79616765723a20464f5242494444454e0000000000000000000000000000600082015250565b60006102bb601283610274565b91506102c682610285565b602082019050919050565b600060208201905081810360008301526102ea816102ae565b905091905056fea264697066735822122043deea683f85bc2b05520d35b22f564840bcd4073cbe58f5b8708e097c75a8ef64736f6c63430008090033a2646970667358221220e79b896e61a83e1fa0fb5ce1407c250d6ab9469e7f7440f9d5b2b73e4303f80364736f6c63430008090033";

export class VaultManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultManager> {
    return super.deploy(overrides || {}) as Promise<VaultManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VaultManager {
    return super.attach(address) as VaultManager;
  }
  connect(signer: Signer): VaultManager__factory {
    return super.connect(signer) as VaultManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultManagerInterface {
    return new utils.Interface(_abi) as VaultManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultManager {
    return new Contract(address, _abi, signerOrProvider) as VaultManager;
  }
}
