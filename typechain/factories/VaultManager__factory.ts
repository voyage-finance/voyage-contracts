/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VaultManager, VaultManagerInterface } from "../VaultManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_voyager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "VaultCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allVaults",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressResolver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllCreditAccount",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getCreditAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voyager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611412380380611412833981810160405281019061003291906100dc565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b6100b98161009e565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f1610079565b5b6000610100848285016100c7565b91505092915050565b6112fa806101186000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063084b0a97146100675780630eb9af3814610097578063133572ba146100c75780639094a91e146100f7578063eb67031514610127578063f448e14014610145575b600080fd5b610081600480360381019061007c91906105fc565b610163565b60405161008e9190610638565b60405180910390f35b6100b160048036038101906100ac91906105fc565b6101cc565b6040516100be9190610638565b60405180910390f35b6100e160048036038101906100dc9190610653565b6101ff565b6040516100ee9190610638565b60405180910390f35b610111600480360381019061010c91906106c9565b610499565b60405161011e9190610638565b60405180910390f35b61012f6104d8565b60405161013c91906107b4565b60405180910390f35b61014d610566565b60405161015a9190610638565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028890610833565b60405180910390fd5b6000604051806020016102a39061058c565b6020820181038252601f19601f8201166040525090506000836040516020016102cc919061089b565b604051602081830303815290604052805190602001209050808251602084016000f592508273ffffffffffffffffffffffffffffffffffffffff1663c4d66de8856040518263ffffffff1660e01b81526004016103299190610638565b600060405180830381600087803b15801561034357600080fd5b505af1158015610357573d6000803e3d6000fd5b505050506000839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff167f0b045af6aff86dd2cda5342fd0329a354dc66759ff1eda00d7ecf13a76c7fb3b846000805490506040516104899291906108c5565b60405180910390a2505092915050565b600081815481106104a957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600080548060200260200160405190810160405280929190818152602001828054801561055c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610512575b5050505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109d6806108ef83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c98261059e565b9050919050565b6105d9816105be565b81146105e457600080fd5b50565b6000813590506105f6816105d0565b92915050565b60006020828403121561061257610611610599565b5b6000610620848285016105e7565b91505092915050565b610632816105be565b82525050565b600060208201905061064d6000830184610629565b92915050565b6000806040838503121561066a57610669610599565b5b6000610678858286016105e7565b9250506020610689858286016105e7565b9150509250929050565b6000819050919050565b6106a681610693565b81146106b157600080fd5b50565b6000813590506106c38161069d565b92915050565b6000602082840312156106df576106de610599565b5b60006106ed848285016106b4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61072b816105be565b82525050565b600061073d8383610722565b60208301905092915050565b6000602082019050919050565b6000610761826106f6565b61076b8185610701565b935061077683610712565b8060005b838110156107a757815161078e8882610731565b975061079983610749565b92505060018101905061077a565b5085935050505092915050565b600060208201905081810360008301526107ce8184610756565b905092915050565b600082825260208201905092915050565b7f5468652063616c6c6572206d757374206265206120766f796167657200000000600082015250565b600061081d601c836107d6565b9150610828826107e7565b602082019050919050565b6000602082019050818103600083015261084c81610810565b9050919050565b60008160601b9050919050565b600061086b82610853565b9050919050565b600061087d82610860565b9050919050565b610895610890826105be565b610872565b82525050565b60006108a78284610884565b60148201915081905092915050565b6108bf81610693565b82525050565b60006040820190506108da6000830185610629565b6108e760208301846108b6565b939250505056fe608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a333600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108ba8061011c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638f32d59b116100665780638f32d59b146100fa578063c45a015514610118578063e30c397814610136578063f2fde38b14610154578063f71d96cb1461017057610093565b806305a2ee2a14610098578063485cc955146100b65780634e71e0c8146100d25780638da5cb5b146100dc575b600080fd5b6100a06101a0565b6040516100ad9190610649565b60405180910390f35b6100d060048036038101906100cb9190610695565b6101c6565b005b6100da6102db565b005b6100e4610477565b6040516100f19190610649565b60405180910390f35b61010261049b565b60405161010f91906106f0565b60405180910390f35b6101206104f2565b60405161012d9190610649565b60405180910390f35b61013e610518565b60405161014b9190610649565b60405180910390f35b61016e6004803603810190610169919061070b565b61053e565b005b61018a6004803603810190610185919061076e565b6105c9565b6040516101979190610649565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024d906107f8565b60405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61054661049b565b610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c90610864565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600481815481106105d957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061063382610608565b9050919050565b61064381610628565b82525050565b600060208201905061065e600083018461063a565b92915050565b600080fd5b61067281610628565b811461067d57600080fd5b50565b60008135905061068f81610669565b92915050565b600080604083850312156106ac576106ab610664565b5b60006106ba85828601610680565b92505060206106cb85828601610680565b9150509250929050565b60008115159050919050565b6106ea816106d5565b82525050565b600060208201905061070560008301846106e1565b92915050565b60006020828403121561072157610720610664565b5b600061072f84828501610680565b91505092915050565b6000819050919050565b61074b81610738565b811461075657600080fd5b50565b60008135905061076881610742565b92915050565b60006020828403121561078457610783610664565b5b600061079284828501610759565b91505092915050565b600082825260208201905092915050565b7f566f7961676572205661756c743a20464f5242494444454e0000000000000000600082015250565b60006107e260188361079b565b91506107ed826107ac565b602082019050919050565b60006020820190508181036000830152610811816107d5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061084e60208361079b565b915061085982610818565b602082019050919050565b6000602082019050818103600083015261087d81610841565b905091905056fea2646970667358221220980e78bf5d130fd632a2fb0e2c6eb2ed8523079d3817d82d79619163c08d44ac64736f6c63430008090033a2646970667358221220e0c4b2148b72f954c3bda8e23438fb37599e794324a03b95eaa82d1c6683d79664736f6c63430008090033";

export class VaultManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _voyager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultManager> {
    return super.deploy(_voyager, overrides || {}) as Promise<VaultManager>;
  }
  getDeployTransaction(
    _voyager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_voyager, overrides || {});
  }
  attach(address: string): VaultManager {
    return super.attach(address) as VaultManager;
  }
  connect(signer: Signer): VaultManager__factory {
    return super.connect(signer) as VaultManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultManagerInterface {
    return new utils.Interface(_abi) as VaultManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultManager {
    return new Contract(address, _abi, signerOrProvider) as VaultManager;
  }
}
