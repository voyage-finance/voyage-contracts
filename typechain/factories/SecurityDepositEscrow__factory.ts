/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SecurityDepositEscrow,
  SecurityDepositEscrowInterface,
} from "../SecurityDepositEscrow";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositRecords",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint40",
            name: "depositTime",
            type: "uint40",
          },
        ],
        internalType: "struct Escrow.Deposit[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36001600281905550611f3a806100e36000396000f3fe6080604052600436106100915760003560e01c80639932f036116100595780639932f0361461014a578063d9caed1214610187578063e30c3978146101b0578063f2fde38b146101db578063f45b1b3a1461020457610091565b80630d8e6e2c146100965780634e71e0c8146100c15780638340f549146100d85780638da5cb5b146100f45780638f32d59b1461011f575b600080fd5b3480156100a257600080fd5b506100ab610241565b6040516100b891906113fe565b60405180910390f35b3480156100cd57600080fd5b506100d6610284565b005b6100f260048036038101906100ed91906114b9565b610420565b005b34801561010057600080fd5b50610109610791565b604051610116919061151b565b60405180910390f35b34801561012b57600080fd5b506101346107b5565b6040516101419190611551565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c919061156c565b61080c565b60405161017e91906116b9565b60405180910390f35b34801561019357600080fd5b506101ae60048036038101906101a99190611719565b610921565b005b3480156101bc57600080fd5b506101c5610d78565b6040516101d2919061151b565b60405180910390f35b3480156101e757600080fd5b5061020260048036038101906101fd919061176c565b610d9e565b005b34801561021057600080fd5b5061022b6004803603810190610226919061156c565b610e29565b60405161023891906117a8565b60405180910390f35b606060006040518060400160405280601b81526020017f53656375726974794465706f736974457363726f7720302e302e31000000000081525090508091505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102de57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600280541415610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045c9061180f565b60405180910390fd5b600280819055506104746107b5565b6104b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104aa9061187b565b60405180910390fd5b6104bb610eb0565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146105625760003414610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105279061190d565b60405180910390fd5b61055d8230838673ffffffffffffffffffffffffffffffffffffffff16610ecc909392919063ffffffff16565b6105a5565b8034146105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b9061199f565b60405180910390fd5b5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461063191906119ee565b92505081905550600060405180604001604052808381526020014264ffffffffff168152509050600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548164ffffffffff021916908364ffffffffff16021790555050508273ffffffffffffffffffffffffffffffffffffffff167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a7858460405161077b929190611a44565b60405180910390a2506001600281905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60606000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080805480602002602001604051908101604052809291908181526020016000905b828210156109145783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900464ffffffffff1664ffffffffff1664ffffffffff1681525050815260200190600101906108af565b5050505091505092915050565b6109296107b5565b610968576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095f9061187b565b60405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008080600090505b8380549050811015610b2857600560009054906101000a900464ffffffffff1664ffffffffff16848281548110610a2b57610a2a611a6d565b5b906000526020600020906002020160010160009054906101000a900464ffffffffff1642610a599190611a9c565b64ffffffffff161115610b1557838181548110610a7957610a78611a6d565b5b90600052602060002090600202016000015483610a9691906119ee565b9250838181548110610aab57610aaa611a6d565b5b906000526020600020906002020160010160009054906101000a900464ffffffffff169150838181548110610ae357610ae2611a6d565b5b90600052602060002090600202016000808201600090556001820160006101000a81549064ffffffffff021916905550505b8080610b2090611ad0565b9150506109f1565b5083821015610b6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6390611b8b565b60405180910390fd5b83821115610c825760008483610b829190611bab565b9050600060405180604001604052808381526020018464ffffffffff168152509050600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548164ffffffffff021916908364ffffffffff160217905550505050505b83600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d0e9190611bab565b92505081905550610d20868686610f55565b8473ffffffffffffffffffffffffffffffffffffffff167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb8786604051610d68929190611a44565b60405180910390a2505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610da66107b5565b610de5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddc9061187b565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee905090565b610f4f846323b872dd60e01b858585604051602401610eed93929190611bdf565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611072565b50505050565b610f5d610eb0565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610fbf57610fba82828573ffffffffffffffffffffffffffffffffffffffff166111399092919063ffffffff16565b61106d565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610fe590611c47565b60006040518083038185875af1925050503d8060008114611022576040519150601f19603f3d011682016040523d82523d6000602084013e611027565b606091505b505090508061106b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106290611ca8565b60405180910390fd5b505b505050565b60006110d4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111bf9092919063ffffffff16565b905060008151111561113457808060200190518101906110f49190611cf4565b611133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112a90611d93565b60405180910390fd5b5b505050565b6111ba8363a9059cbb60e01b8484604051602401611158929190611a44565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611072565b505050565b60606111ce84846000856111d7565b90509392505050565b60608247101561121c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121390611e25565b60405180910390fd5b611225856112eb565b611264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125b90611e91565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161128d9190611eed565b60006040518083038185875af1925050503d80600081146112ca576040519150601f19603f3d011682016040523d82523d6000602084013e6112cf565b606091505b50915091506112df8282866112fe565b92505050949350505050565b600080823b905060008111915050919050565b6060831561130e5782905061135e565b6000835111156113215782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135591906113fe565b60405180910390fd5b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561139f578082015181840152602081019050611384565b838111156113ae576000848401525b50505050565b6000601f19601f8301169050919050565b60006113d082611365565b6113da8185611370565b93506113ea818560208601611381565b6113f3816113b4565b840191505092915050565b6000602082019050818103600083015261141881846113c5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061145082611425565b9050919050565b61146081611445565b811461146b57600080fd5b50565b60008135905061147d81611457565b92915050565b6000819050919050565b61149681611483565b81146114a157600080fd5b50565b6000813590506114b38161148d565b92915050565b6000806000606084860312156114d2576114d1611420565b5b60006114e08682870161146e565b93505060206114f18682870161146e565b9250506040611502868287016114a4565b9150509250925092565b61151581611445565b82525050565b6000602082019050611530600083018461150c565b92915050565b60008115159050919050565b61154b81611536565b82525050565b60006020820190506115666000830184611542565b92915050565b6000806040838503121561158357611582611420565b5b60006115918582860161146e565b92505060206115a28582860161146e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6115e181611483565b82525050565b600064ffffffffff82169050919050565b611601816115e7565b82525050565b60408201600082015161161d60008501826115d8565b50602082015161163060208501826115f8565b50505050565b60006116428383611607565b60408301905092915050565b6000602082019050919050565b6000611666826115ac565b61167081856115b7565b935061167b836115c8565b8060005b838110156116ac5781516116938882611636565b975061169e8361164e565b92505060018101905061167f565b5085935050505092915050565b600060208201905081810360008301526116d3818461165b565b905092915050565b60006116e682611425565b9050919050565b6116f6816116db565b811461170157600080fd5b50565b600081359050611713816116ed565b92915050565b60008060006060848603121561173257611731611420565b5b60006117408682870161146e565b935050602061175186828701611704565b9250506040611762868287016114a4565b9150509250925092565b60006020828403121561178257611781611420565b5b60006117908482850161146e565b91505092915050565b6117a281611483565b82525050565b60006020820190506117bd6000830184611799565b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006117f9601f83611370565b9150611804826117c3565b602082019050919050565b60006020820190508181036000830152611828816117ec565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611865602083611370565b91506118708261182f565b602082019050919050565b6000602082019050818103600083015261189481611858565b9050919050565b7f557365722069732073656e64696e672045544820616c6f6e672077697468207460008201527f6865204552433230207472616e736665722e0000000000000000000000000000602082015250565b60006118f7603283611370565b91506119028261189b565b604082019050919050565b60006020820190508181036000830152611926816118ea565b9050919050565b7f54686520616d6f756e7420616e64207468652076616c75652073656e7420746f60008201527f206465706f73697420646f206e6f74206d617463680000000000000000000000602082015250565b6000611989603583611370565b91506119948261192d565b604082019050919050565b600060208201905081810360008301526119b88161197c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119f982611483565b9150611a0483611483565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a3957611a386119bf565b5b828201905092915050565b6000604082019050611a59600083018561150c565b611a666020830184611799565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611aa7826115e7565b9150611ab2836115e7565b925082821015611ac557611ac46119bf565b5b828203905092915050565b6000611adb82611483565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b0e57611b0d6119bf565b5b600182019050919050565b7f446f206e6f74206861766520656e6f75676820616d6f756e7420746f2077697460008201527f6864726177000000000000000000000000000000000000000000000000000000602082015250565b6000611b75602583611370565b9150611b8082611b19565b604082019050919050565b60006020820190508181036000830152611ba481611b68565b9050919050565b6000611bb682611483565b9150611bc183611483565b925082821015611bd457611bd36119bf565b5b828203905092915050565b6000606082019050611bf4600083018661150c565b611c01602083018561150c565b611c0e6040830184611799565b949350505050565b600081905092915050565b50565b6000611c31600083611c16565b9150611c3c82611c21565b600082019050919050565b6000611c5282611c24565b9150819050919050565b7f5472616e73666572206f6620455448206661696c656400000000000000000000600082015250565b6000611c92601683611370565b9150611c9d82611c5c565b602082019050919050565b60006020820190508181036000830152611cc181611c85565b9050919050565b611cd181611536565b8114611cdc57600080fd5b50565b600081519050611cee81611cc8565b92915050565b600060208284031215611d0a57611d09611420565b5b6000611d1884828501611cdf565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611d7d602a83611370565b9150611d8882611d21565b604082019050919050565b60006020820190508181036000830152611dac81611d70565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611e0f602683611370565b9150611e1a82611db3565b604082019050919050565b60006020820190508181036000830152611e3e81611e02565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611e7b601d83611370565b9150611e8682611e45565b602082019050919050565b60006020820190508181036000830152611eaa81611e6e565b9050919050565b600081519050919050565b6000611ec782611eb1565b611ed18185611c16565b9350611ee1818560208601611381565b80840191505092915050565b6000611ef98284611ebc565b91508190509291505056fea2646970667358221220a8380646014b0adc1746e0deaf8295ed20ef81e56c4524b2a4f53c24cbdf28c264736f6c63430008090033";

export class SecurityDepositEscrow__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SecurityDepositEscrow> {
    return super.deploy(overrides || {}) as Promise<SecurityDepositEscrow>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SecurityDepositEscrow {
    return super.attach(address) as SecurityDepositEscrow;
  }
  connect(signer: Signer): SecurityDepositEscrow__factory {
    return super.connect(signer) as SecurityDepositEscrow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecurityDepositEscrowInterface {
    return new utils.Interface(_abi) as SecurityDepositEscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SecurityDepositEscrow {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SecurityDepositEscrow;
  }
}
