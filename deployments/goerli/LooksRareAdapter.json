{
  "address": "0xB8812e7a91C61a754F34605B18e962711601C693",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "extractAssetInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct AssetInfo",
          "name": "assetInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xba53d3bac3675cb50611f5947190f307086f7cd4ca7ef52a0025578634913c1b",
  "receipt": {
    "to": null,
    "from": "0x7bB17c9401110D05ec39894334cC9d7721E90688",
    "contractAddress": "0xB8812e7a91C61a754F34605B18e962711601C693",
    "transactionIndex": 23,
    "gasUsed": "608761",
    "logsBloom": "0x
    "blockHash": "0x5edfa7deca3887fd5473ff3f3f0e79ae2f1ff7159485d27e0e6f55c3690064a3",
    "transactionHash": "0xba53d3bac3675cb50611f5947190f307086f7cd4ca7ef52a0025578634913c1b",
    "logs": [],
    "blockNumber": 7595344,
    "cumulativeGasUsed": "9516603",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ed9f4e7c6fd627665f444b0a52a22fe4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"extractAssetInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetInfo\",\"name\":\"assetInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/voyage/adapter/LooksRareAdapter.sol\":\"LooksRareAdapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/voyage/adapter/LooksRareAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.9;\\n\\nimport {IMarketPlaceAdapter, AssetInfo} from \\\"../interfaces/IMarketPlaceAdapter.sol\\\";\\n\\nstruct MakerOrder {\\n    bool isOrderAsk; // true --> ask / false --> bid\\n    address signer; // signer of the maker order\\n    address collection; // collection address\\n    uint256 price; // price (used as )\\n    uint256 tokenId; // id of the token\\n    uint256 amount; // amount of tokens to sell/purchase (must be 1 for ERC721, 1+ for ERC1155)\\n    address strategy; // strategy for trade execution (e.g., DutchAuction, StandardSaleForFixedPrice)\\n    address currency; // currency (e.g., WETH)\\n    uint256 nonce; // order nonce (must be unique unless new maker order is meant to override existing one e.g., lower ask price)\\n    uint256 startTime; // startTime in timestamp\\n    uint256 endTime; // endTime in timestamp\\n    uint256 minPercentageToAsk; // slippage protection (9000 --> 90% of the final price must return to ask)\\n    bytes params; // additional parameters\\n    uint8 v; // v: parameter (27 or 28)\\n    bytes32 r; // r: parameter\\n    bytes32 s; // s: parameter\\n}\\n\\nstruct TakerOrder {\\n    bool isOrderAsk; // true --> ask / false --> bid\\n    address taker; // msg.sender\\n    uint256 price; // final price for the purchase\\n    uint256 tokenId;\\n    uint256 minPercentageToAsk; // // slippage protection (9000 --> 90% of the final price must return to ask)\\n    bytes params; // other params (e.g., tokenId)\\n}\\n\\ninterface ILooksRareExchange {\\n    function matchAskWithTakerBidUsingETHAndWETH(\\n        TakerOrder calldata takerBid,\\n        MakerOrder calldata makerAsk\\n    ) external payable;\\n\\n    function matchAskWithTakerBid(\\n        TakerOrder calldata takerBid,\\n        MakerOrder calldata makerAsk\\n    ) external;\\n\\n    function matchBidWithTakerAsk(\\n        TakerOrder calldata takerAsk,\\n        MakerOrder calldata makerBid\\n    ) external;\\n}\\n\\ncontract LooksRareAdapter is IMarketPlaceAdapter {\\n    // keccak256(\\\"MakerOrder(bool isOrderAsk,address signer,address collection,uint256 price,uint256 tokenId,uint256 amount,address strategy,address currency,uint256 nonce,uint256 startTime,uint256 endTime,uint256 minPercentageToAsk,bytes params)\\\")\\n    bytes32 internal constant MAKER_ORDER_HASH =\\n        0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028;\\n\\n    function hash(MakerOrder memory makerOrder)\\n        internal\\n        pure\\n        returns (bytes32)\\n    {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    MAKER_ORDER_HASH,\\n                    makerOrder.isOrderAsk,\\n                    makerOrder.signer,\\n                    makerOrder.collection,\\n                    makerOrder.price,\\n                    makerOrder.tokenId,\\n                    makerOrder.amount,\\n                    makerOrder.strategy,\\n                    makerOrder.currency,\\n                    makerOrder.nonce,\\n                    makerOrder.startTime,\\n                    makerOrder.endTime,\\n                    makerOrder.minPercentageToAsk,\\n                    keccak256(makerOrder.params)\\n                )\\n            );\\n    }\\n\\n    function extractAssetInfo(bytes calldata _data)\\n        external\\n        pure\\n        returns (AssetInfo memory assetInfo)\\n    {\\n        (, TakerOrder memory takerOrder, ) = _decodeCalldata(_data);\\n        assetInfo.assetPrice = takerOrder.price;\\n        assetInfo.tokenId = takerOrder.tokenId;\\n\\n        return assetInfo;\\n    }\\n\\n    function validate(bytes calldata _data) external pure returns (bool) {\\n        return _validate(_data);\\n    }\\n\\n    function execute(bytes calldata _data)\\n        external\\n        pure\\n        returns (bytes memory)\\n    {\\n        if (_validate(_data)) {\\n            (\\n                bytes4 selector,\\n                TakerOrder memory takerOrder,\\n                MakerOrder memory makerOrder\\n            ) = _decodeCalldata(_data);\\n            bytes memory data = abi.encode(takerOrder, makerOrder);\\n            data = abi.encodePacked(selector, data);\\n            return data;\\n        }\\n        // use native error type here cause an ABI issue\\n        revert(\\\"invalid data\\\");\\n    }\\n\\n    function _validate(bytes calldata _data) private pure returns (bool) {\\n        (bytes4 selector, , ) = _decodeCalldata(_data);\\n        // bytes4(keccak256(matchAskWithTakerBidUsingETHAndWETH()))\\n        // 0xb4e4b296\\n        if (\\n            selector !=\\n            ILooksRareExchange(address(0))\\n                .matchAskWithTakerBidUsingETHAndWETH\\n                .selector\\n        ) {\\n            return false;\\n        }\\n        return true;\\n    }\\n\\n    function _decodeCalldata(bytes calldata _data)\\n        internal\\n        pure\\n        returns (\\n            bytes4 selector,\\n            TakerOrder memory takerOrder,\\n            MakerOrder memory makerOrder\\n        )\\n    {\\n        selector = bytes4(_data[0:4]);\\n        (takerOrder, makerOrder) = abi.decode(\\n            _data[4:],\\n            (TakerOrder, MakerOrder)\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x308ba51f7c81c0f0cefdc4f9db672eda4d14a44d938ec2b5a40dd64a64c57d14\",\"license\":\"GPL-3.0\"},\"contracts/voyage/interfaces/IMarketPlaceAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.9;\\n\\nstruct AssetInfo {\\n    uint256 tokenId;\\n    uint256 assetPrice;\\n}\\n\\ninterface IMarketPlaceAdapter {\\n    function extractAssetInfo(bytes calldata _data)\\n        external\\n        pure\\n        returns (AssetInfo memory);\\n\\n    function validate(bytes calldata _data) external view returns (bool);\\n\\n    function execute(bytes calldata _data) external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x02dbc2e2ea68e0b2f3db8a69314e436551aae2e947720d4a764162e70d515090\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610a17806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806309c5eabe146100465780630cfe386f1461006f578063c16e50ef1461009d575b600080fd5b610059610054366004610351565b6100c0565b604051610066919061041f565b60405180910390f35b61008261007d366004610351565b6101a7565b60408051825181526020928301519281019290925201610066565b6100b06100ab366004610351565b6101e0565b6040519015158152602001610066565b60606100cc83836101f3565b1561013b5760008060006100e08686610262565b925092509250600082826040516020016100fb929190610432565b6040516020818303038152906040529050838160405160200161011f9291906105ee565b60408051601f1981840301815291905294506101a19350505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f696e76616c696420646174610000000000000000000000000000000000000000604482015260640160405180910390fd5b92915050565b604080518082019091526000808252602082015260006101c78484610262565b5060408101516020850152606001518352505092915050565b60006101ec83836101f3565b9392505050565b6000806102008484610262565b50909150507fffffffff0000000000000000000000000000000000000000000000000000000081167fb4e4b29600000000000000000000000000000000000000000000000000000000146102585760009150506101a1565b5060019392505050565b6040805160c08101825260008082526020820181905291810182905260608082018390526080820183905260a0820152604080516102008101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201839052610140820183905261016082018390526101808201526101a081018290526101c081018290526101e0810191909152610320600460008688610636565b61032991610660565b92506103388460048188610636565b810190610345919061090f565b93969095509293505050565b6000806020838503121561036457600080fd5b823567ffffffffffffffff8082111561037c57600080fd5b818501915085601f83011261039057600080fd5b81358181111561039f57600080fd5b8660208285010111156103b157600080fd5b60209290920196919550909350505050565b60005b838110156103de5781810151838201526020016103c6565b838111156103ed576000848401525b50505050565b6000815180845261040b8160208601602086016103c3565b601f01601f19169290920160200192915050565b6020815260006101ec60208301846103f3565b60408152600061010084511515604084015273ffffffffffffffffffffffffffffffffffffffff602086015116606084015260408501516080840152606085015160a0840152608085015160c084015260a085015160c060e085015261049a828501826103f3565b8481036020860152855115158152905061020060208601516104d4602084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408601516104fc604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606086015160608301526080860151608083015260a086015160a083015260c086015161054260c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e086015161056a60e084018273ffffffffffffffffffffffffffffffffffffffff169052565b508583015192820192909252610120808601519082015261014080860151908201526101608086015190820152610180808601518183018490529092906105b3828401826103f3565b935050506101a0808601516105cc8284018260ff169052565b50506101c085810151908201526101e094850151940193909352509092915050565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516106288160048501602087016103c3565b919091016004019392505050565b6000808585111561064657600080fd5b8386111561065357600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156106a05780818660040360031b1b83161692505b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610200810167ffffffffffffffff811182821017156106fb576106fb6106a8565b60405290565b60405160c0810167ffffffffffffffff811182821017156106fb576106fb6106a8565b8035801515811461073457600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461073457600080fd5b600082601f83011261076e57600080fd5b813567ffffffffffffffff80821115610789576107896106a8565b604051601f8301601f19908116603f011681019082821181831017156107b1576107b16106a8565b816040528381528660208588010111156107ca57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461073457600080fd5b6000610200828403121561080e57600080fd5b6108166106d7565b905061082182610724565b815261082f60208301610739565b602082015261084060408301610739565b6040820152606082013560608201526080820135608082015260a082013560a082015261086f60c08301610739565b60c082015261088060e08301610739565b60e082015261010082810135908201526101208083013590820152610140808301359082015261016080830135908201526101808083013567ffffffffffffffff8111156108cd57600080fd5b6108d98582860161075d565b8284015250506101a06108ed8184016107ea565b908201526101c082810135908201526101e09182013591810191909152919050565b6000806040838503121561092257600080fd5b823567ffffffffffffffff8082111561093a57600080fd5b9084019060c0828703121561094e57600080fd5b610956610701565b61095f83610724565b815261096d60208401610739565b602082015260408301356040820152606083013560608201526080830135608082015260a0830135828111156109a257600080fd5b6109ae8882860161075d565b60a083015250935060208501359150808211156109ca57600080fd5b506109d7858286016107fb565b915050925092905056fea2646970667358221220002934e4227d6a26bb5bb15b7d253e9b13b563cb518d748992b3bfee2e130ca264736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806309c5eabe146100465780630cfe386f1461006f578063c16e50ef1461009d575b600080fd5b610059610054366004610351565b6100c0565b604051610066919061041f565b60405180910390f35b61008261007d366004610351565b6101a7565b60408051825181526020928301519281019290925201610066565b6100b06100ab366004610351565b6101e0565b6040519015158152602001610066565b60606100cc83836101f3565b1561013b5760008060006100e08686610262565b925092509250600082826040516020016100fb929190610432565b6040516020818303038152906040529050838160405160200161011f9291906105ee565b60408051601f1981840301815291905294506101a19350505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f696e76616c696420646174610000000000000000000000000000000000000000604482015260640160405180910390fd5b92915050565b604080518082019091526000808252602082015260006101c78484610262565b5060408101516020850152606001518352505092915050565b60006101ec83836101f3565b9392505050565b6000806102008484610262565b50909150507fffffffff0000000000000000000000000000000000000000000000000000000081167fb4e4b29600000000000000000000000000000000000000000000000000000000146102585760009150506101a1565b5060019392505050565b6040805160c08101825260008082526020820181905291810182905260608082018390526080820183905260a0820152604080516102008101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201839052610140820183905261016082018390526101808201526101a081018290526101c081018290526101e0810191909152610320600460008688610636565b61032991610660565b92506103388460048188610636565b810190610345919061090f565b93969095509293505050565b6000806020838503121561036457600080fd5b823567ffffffffffffffff8082111561037c57600080fd5b818501915085601f83011261039057600080fd5b81358181111561039f57600080fd5b8660208285010111156103b157600080fd5b60209290920196919550909350505050565b60005b838110156103de5781810151838201526020016103c6565b838111156103ed576000848401525b50505050565b6000815180845261040b8160208601602086016103c3565b601f01601f19169290920160200192915050565b6020815260006101ec60208301846103f3565b60408152600061010084511515604084015273ffffffffffffffffffffffffffffffffffffffff602086015116606084015260408501516080840152606085015160a0840152608085015160c084015260a085015160c060e085015261049a828501826103f3565b8481036020860152855115158152905061020060208601516104d4602084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408601516104fc604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606086015160608301526080860151608083015260a086015160a083015260c086015161054260c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e086015161056a60e084018273ffffffffffffffffffffffffffffffffffffffff169052565b508583015192820192909252610120808601519082015261014080860151908201526101608086015190820152610180808601518183018490529092906105b3828401826103f3565b935050506101a0808601516105cc8284018260ff169052565b50506101c085810151908201526101e094850151940193909352509092915050565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516106288160048501602087016103c3565b919091016004019392505050565b6000808585111561064657600080fd5b8386111561065357600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156106a05780818660040360031b1b83161692505b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610200810167ffffffffffffffff811182821017156106fb576106fb6106a8565b60405290565b60405160c0810167ffffffffffffffff811182821017156106fb576106fb6106a8565b8035801515811461073457600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461073457600080fd5b600082601f83011261076e57600080fd5b813567ffffffffffffffff80821115610789576107896106a8565b604051601f8301601f19908116603f011681019082821181831017156107b1576107b16106a8565b816040528381528660208588010111156107ca57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461073457600080fd5b6000610200828403121561080e57600080fd5b6108166106d7565b905061082182610724565b815261082f60208301610739565b602082015261084060408301610739565b6040820152606082013560608201526080820135608082015260a082013560a082015261086f60c08301610739565b60c082015261088060e08301610739565b60e082015261010082810135908201526101208083013590820152610140808301359082015261016080830135908201526101808083013567ffffffffffffffff8111156108cd57600080fd5b6108d98582860161075d565b8284015250506101a06108ed8184016107ea565b908201526101c082810135908201526101e09182013591810191909152919050565b6000806040838503121561092257600080fd5b823567ffffffffffffffff8082111561093a57600080fd5b9084019060c0828703121561094e57600080fd5b610956610701565b61095f83610724565b815261096d60208401610739565b602082015260408301356040820152606083013560608201526080830135608082015260a0830135828111156109a257600080fd5b6109ae8882860161075d565b60a083015250935060208501359150808211156109ca57600080fd5b506109d7858286016107fb565b915050925092905056fea2646970667358221220002934e4227d6a26bb5bb15b7d253e9b13b563cb518d748992b3bfee2e130ca264736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}