{
  "address": "0xeF7E8567418c5C704e89B36C90De828553b18EBA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aclAdmin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDITY_MANAGER_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDITY_MANAGER_CONTRACT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOAN_MANAGER_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOAN_MANAGER_CONTRACT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VAULT_MANAGER_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOYAGER_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantLiquidityManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantLiquidityManagerContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantLoanManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantLoanManagerContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantPoolManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantVaultManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isLiquidityManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isLiquidityManagerContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isLoanManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isLoanManagerContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isProtocolManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isVaultManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x968c0be01d8f59fbadee6c34f6768934c6ec5c9b805a6a055f3ee77a8ec81c48",
  "receipt": {
    "to": null,
    "from": "0x4C616d9377Fa8d928385F0b11Ab16D4bf0f2d544",
    "contractAddress": "0xeF7E8567418c5C704e89B36C90De828553b18EBA",
    "transactionIndex": 10,
    "gasUsed": "1271663",
    "logsBloom": "0x
    "blockHash": "0x96c7fc89588991106d2b39ca4aab1fdb9a4b70f6311b87828ee450ba3f32c908",
    "transactionHash": "0x968c0be01d8f59fbadee6c34f6768934c6ec5c9b805a6a055f3ee77a8ec81c48",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 8678097,
        "transactionHash": "0x968c0be01d8f59fbadee6c34f6768934c6ec5c9b805a6a055f3ee77a8ec81c48",
        "address": "0xeF7E8567418c5C704e89B36C90De828553b18EBA",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004c616d9377fa8d928385f0b11ab16d4bf0f2d544",
          "0x0000000000000000000000004c616d9377fa8d928385f0b11ab16d4bf0f2d544"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0x96c7fc89588991106d2b39ca4aab1fdb9a4b70f6311b87828ee450ba3f32c908"
      }
    ],
    "blockNumber": 8678097,
    "cumulativeGasUsed": "2017147",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4C616d9377Fa8d928385F0b11Ab16D4bf0f2d544"
  ],
  "numDeployments": 1,
  "solcInputHash": "6f9c8247aed918dfac26aa86d962175c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aclAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDITY_MANAGER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDITY_MANAGER_CONTRACT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOAN_MANAGER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOAN_MANAGER_CONTRACT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VAULT_MANAGER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOYAGER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantLiquidityManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantLiquidityManagerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantLoanManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantLoanManagerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantPoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantVaultManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isLiquidityManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isLiquidityManagerContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isLoanManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isLoanManagerContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isProtocolManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isVaultManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/component/infra/ACLManager.sol\":\"ACLManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/component/infra/ACLManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.9;\\n\\nimport 'openzeppelin-solidity/contracts/access/AccessControl.sol';\\nimport '../../interfaces/IACLManager.sol';\\n\\ncontract ACLManager is AccessControl, IACLManager {\\n    bytes32 public constant VOYAGER_ADMIN_ROLE = keccak256('VOYAGER_ADMIN');\\n\\n    bytes32 public constant LIQUIDITY_MANAGER_CONTRACT_ROLE =\\n        keccak256('LIQUIDITY_MANAGER_CONTRACT');\\n\\n    bytes32 public constant LIQUIDITY_MANAGER_ADMIN_ROLE =\\n        keccak256('LIQUIDITY_MANAGER_ADMIN');\\n\\n    bytes32 public constant VAULT_MANAGER_ADMIN_ROLE =\\n        keccak256('VAULT_MANAGER_ADMIN');\\n\\n    bytes32 public constant LOAN_MANAGER_ADMIN_ROLE =\\n        keccak256('LOAN_MANAGER_ADMIN');\\n\\n    bytes32 public constant LOAN_MANAGER_CONTRACT_ROLE =\\n        keccak256('LOAN_MANAGER_CONTRACT');\\n\\n    constructor(address _aclAdmin) {\\n        _setupRole(DEFAULT_ADMIN_ROLE, _aclAdmin);\\n    }\\n\\n    function grantLiquidityManagerContract(address _admin) external {\\n        grantRole(LIQUIDITY_MANAGER_CONTRACT_ROLE, _admin);\\n    }\\n\\n    function isLiquidityManagerContract(address _admin)\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return hasRole(LIQUIDITY_MANAGER_CONTRACT_ROLE, _admin);\\n    }\\n\\n    function grantLiquidityManager(address _admin) external {\\n        grantRole(LIQUIDITY_MANAGER_ADMIN_ROLE, _admin);\\n    }\\n\\n    function isLiquidityManager(address _admin) external view returns (bool) {\\n        return hasRole(LIQUIDITY_MANAGER_ADMIN_ROLE, _admin);\\n    }\\n\\n    function grantLoanManagerContract(address _admin) external {\\n        grantRole(LOAN_MANAGER_CONTRACT_ROLE, _admin);\\n    }\\n\\n    function isLoanManagerContract(address _admin)\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return hasRole(LOAN_MANAGER_CONTRACT_ROLE, _admin);\\n    }\\n\\n    function grantLoanManager(address _admin) external {\\n        grantRole(LOAN_MANAGER_ADMIN_ROLE, _admin);\\n    }\\n\\n    function isLoanManager(address _admin) external view returns (bool) {\\n        return hasRole(LOAN_MANAGER_ADMIN_ROLE, _admin);\\n    }\\n\\n    function grantVaultManager(address _admin) external {\\n        grantRole(VAULT_MANAGER_ADMIN_ROLE, _admin);\\n    }\\n\\n    function isVaultManager(address _admin) external view returns (bool) {\\n        return hasRole(VAULT_MANAGER_ADMIN_ROLE, _admin);\\n    }\\n\\n    function grantPoolManager(address _admin) external {\\n        grantRole(VOYAGER_ADMIN_ROLE, _admin);\\n    }\\n\\n    function isProtocolManager(address _admin) external view returns (bool) {\\n        return hasRole(VOYAGER_ADMIN_ROLE, _admin);\\n    }\\n}\\n\",\"keccak256\":\"0x8ba92027b8c370c8c6a9a3dc4d4903a3ba87382738fa0c30a12d17fe8dfb048f\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IACLManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.9;\\n\\ninterface IACLManager {\\n    function grantLiquidityManager(address _admin) external;\\n\\n    function isLiquidityManager(address _admin) external view returns (bool);\\n\\n    function grantVaultManager(address _admin) external;\\n\\n    function isVaultManager(address _admin) external view returns (bool);\\n\\n    function grantPoolManager(address _admin) external;\\n\\n    function grantLoanManager(address _admin) external;\\n\\n    function isLoanManager(address _admin) external view returns (bool);\\n\\n    function isProtocolManager(address _admin) external view returns (bool);\\n\\n    function grantLiquidityManagerContract(address _admin) external;\\n\\n    function isLiquidityManagerContract(address _admin)\\n        external\\n        view\\n        returns (bool);\\n\\n    function grantLoanManagerContract(address _admin) external;\\n\\n    function isLoanManagerContract(address _admin) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4cd4bee9052dc69cbe401f12e7bf96a6d395bd3911af4d37166686cf8c9a9884\",\"license\":\"GPL-3.0\"},\"openzeppelin-solidity/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, _msgSender());\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4a1a0ba12bf1a33f10d9fe226278cf59675c0b929d29e4da99658a079b27fb84\",\"license\":\"MIT\"},\"openzeppelin-solidity/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620017f7380380620017f7833981810160405281019062000037919062000236565b6200004c6000801b826200005360201b60201c565b5062000268565b6200006582826200006960201b60201c565b5050565b6200007b82826200015a60201b60201c565b6200015657600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620000fb620001c460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fe82620001d1565b9050919050565b6200021081620001f1565b81146200021c57600080fd5b50565b600081519050620002308162000205565b92915050565b6000602082840312156200024f576200024e620001cc565b5b60006200025f848285016200021f565b91505092915050565b61157f80620002786000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806395b32a66116100de578063add31ed711610097578063daf5f67811610071578063daf5f6781461045a578063df89b34414610478578063e9daac88146104a8578063f4070e2d146104c657610173565b8063add31ed714610402578063af21b83814610420578063d547741f1461043e57610173565b806395b32a661461032e578063a10812a71461035e578063a217fddf1461037c578063a900e3391461039a578063a9bf2d77146103b6578063abd02480146103d257610173565b806334d02db41161013057806334d02db41461025e57806336568abe1461027a57806338e6026d14610296578063676a553e146102b25780637acd93c6146102e257806391d14854146102fe57610173565b80630118e3fb1461017857806301ffc9a7146101945780631f77f8c6146101c4578063248a9ca3146101f45780632615765a146102245780632f2ff15d14610242575b600080fd5b610192600480360381019061018d9190610f5c565b6104f6565b005b6101ae60048036038101906101a99190610fe1565b610523565b6040516101bb9190611029565b60405180910390f35b6101de60048036038101906101d99190610f5c565b61059d565b6040516101eb9190611029565b60405180910390f35b61020e6004803603810190610209919061107a565b6105d0565b60405161021b91906110b6565b60405180910390f35b61022c6105ef565b60405161023991906110b6565b60405180910390f35b61025c600480360381019061025791906110d1565b610613565b005b61027860048036038101906102739190610f5c565b61063c565b005b610294600480360381019061028f91906110d1565b610669565b005b6102b060048036038101906102ab9190610f5c565b6106ec565b005b6102cc60048036038101906102c79190610f5c565b610719565b6040516102d99190611029565b60405180910390f35b6102fc60048036038101906102f79190610f5c565b61074c565b005b610318600480360381019061031391906110d1565b610779565b6040516103259190611029565b60405180910390f35b61034860048036038101906103439190610f5c565b6107e3565b6040516103559190611029565b60405180910390f35b610366610816565b60405161037391906110b6565b60405180910390f35b61038461083a565b60405161039191906110b6565b60405180910390f35b6103b460048036038101906103af9190610f5c565b610841565b005b6103d060048036038101906103cb9190610f5c565b61086e565b005b6103ec60048036038101906103e79190610f5c565b61089b565b6040516103f99190611029565b60405180910390f35b61040a6108ce565b60405161041791906110b6565b60405180910390f35b6104286108f2565b60405161043591906110b6565b60405180910390f35b610458600480360381019061045391906110d1565b610916565b005b61046261093f565b60405161046f91906110b6565b60405180910390f35b610492600480360381019061048d9190610f5c565b610963565b60405161049f9190611029565b60405180910390f35b6104b0610996565b6040516104bd91906110b6565b60405180910390f35b6104e060048036038101906104db9190610f5c565b6109ba565b6040516104ed9190611029565b60405180910390f35b6105207f4e9ffdddc97f584b139425ce5ef330e87394004074fd26a145a5b2c82f0c044c82610613565b50565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105965750610595826109ed565b5b9050919050565b60006105c97fb300c03ba420ab9d0241a6226a6dfed8a9649924028cac75820473dd59fe69ac83610779565b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7fb300c03ba420ab9d0241a6226a6dfed8a9649924028cac75820473dd59fe69ac81565b61061c826105d0565b61062d81610628610a57565b610a5f565b6106378383610afc565b505050565b6106667f52ca3a89cb62208d131882b193483d01b3944d11adafdf7c1a0404041271cd3e82610613565b50565b610671610a57565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d590611194565b60405180910390fd5b6106e88282610bdc565b5050565b6107167f7752c70e91cde7a03c746a15fae3fee7c5f52190a95e0c1d7dec3728d8d0083d82610613565b50565b60006107457f4e9ffdddc97f584b139425ce5ef330e87394004074fd26a145a5b2c82f0c044c83610779565b9050919050565b6107767fb300c03ba420ab9d0241a6226a6dfed8a9649924028cac75820473dd59fe69ac82610613565b50565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061080f7f0ca2bc107a02999282a3ef2016fd3d5ca1b04101c59c5d737c6399ee8d9afea483610779565b9050919050565b7f7752c70e91cde7a03c746a15fae3fee7c5f52190a95e0c1d7dec3728d8d0083d81565b6000801b81565b61086b7f4f0af8ee4e6376c93b7de9e82112287aea6d1bce5463866f7b2754dd42e667c682610613565b50565b6108987f0ca2bc107a02999282a3ef2016fd3d5ca1b04101c59c5d737c6399ee8d9afea482610613565b50565b60006108c77f52ca3a89cb62208d131882b193483d01b3944d11adafdf7c1a0404041271cd3e83610779565b9050919050565b7f52ca3a89cb62208d131882b193483d01b3944d11adafdf7c1a0404041271cd3e81565b7f4e9ffdddc97f584b139425ce5ef330e87394004074fd26a145a5b2c82f0c044c81565b61091f826105d0565b6109308161092b610a57565b610a5f565b61093a8383610bdc565b505050565b7f0ca2bc107a02999282a3ef2016fd3d5ca1b04101c59c5d737c6399ee8d9afea481565b600061098f7f4f0af8ee4e6376c93b7de9e82112287aea6d1bce5463866f7b2754dd42e667c683610779565b9050919050565b7f4f0af8ee4e6376c93b7de9e82112287aea6d1bce5463866f7b2754dd42e667c681565b60006109e67f7752c70e91cde7a03c746a15fae3fee7c5f52190a95e0c1d7dec3728d8d0083d83610779565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b610a698282610779565b610af857610a8e8173ffffffffffffffffffffffffffffffffffffffff166014610cbd565b610a9c8360001c6020610cbd565b604051602001610aad9291906112c6565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef919061134a565b60405180910390fd5b5050565b610b068282610779565b610bd857600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b7d610a57565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610be68282610779565b15610cb957600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c5e610a57565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b606060006002836002610cd091906113a5565b610cda91906113ff565b67ffffffffffffffff811115610cf357610cf2611455565b5b6040519080825280601f01601f191660200182016040528015610d255781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610d5d57610d5c611484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610dc157610dc0611484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610e0191906113a5565b610e0b91906113ff565b90505b6001811115610eab577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610e4d57610e4c611484565b5b1a60f81b828281518110610e6457610e63611484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610ea4906114b3565b9050610e0e565b5060008414610eef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee690611529565b60405180910390fd5b8091505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f2982610efe565b9050919050565b610f3981610f1e565b8114610f4457600080fd5b50565b600081359050610f5681610f30565b92915050565b600060208284031215610f7257610f71610ef9565b5b6000610f8084828501610f47565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610fbe81610f89565b8114610fc957600080fd5b50565b600081359050610fdb81610fb5565b92915050565b600060208284031215610ff757610ff6610ef9565b5b600061100584828501610fcc565b91505092915050565b60008115159050919050565b6110238161100e565b82525050565b600060208201905061103e600083018461101a565b92915050565b6000819050919050565b61105781611044565b811461106257600080fd5b50565b6000813590506110748161104e565b92915050565b6000602082840312156110905761108f610ef9565b5b600061109e84828501611065565b91505092915050565b6110b081611044565b82525050565b60006020820190506110cb60008301846110a7565b92915050565b600080604083850312156110e8576110e7610ef9565b5b60006110f685828601611065565b925050602061110785828601610f47565b9150509250929050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061117e602f83611111565b915061118982611122565b604082019050919050565b600060208201905081810360008301526111ad81611171565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006111f56017836111b4565b9150611200826111bf565b601782019050919050565b600081519050919050565b60005b83811015611234578082015181840152602081019050611219565b83811115611243576000848401525b50505050565b60006112548261120b565b61125e81856111b4565b935061126e818560208601611216565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006112b06011836111b4565b91506112bb8261127a565b601182019050919050565b60006112d1826111e8565b91506112dd8285611249565b91506112e8826112a3565b91506112f48284611249565b91508190509392505050565b6000601f19601f8301169050919050565b600061131c8261120b565b6113268185611111565b9350611336818560208601611216565b61133f81611300565b840191505092915050565b600060208201905081810360008301526113648184611311565b905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113b08261136c565b91506113bb8361136c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113f4576113f3611376565b5b828202905092915050565b600061140a8261136c565b91506114158361136c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561144a57611449611376565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006114be8261136c565b915060008214156114d2576114d1611376565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611513602083611111565b915061151e826114dd565b602082019050919050565b6000602082019050818103600083015261154281611506565b905091905056fea264697066735822122026fd4482a5df50cb381f8c61d6490ba484bf44a39112431b8e35197b7e7d3c0764736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806395b32a66116100de578063add31ed711610097578063daf5f67811610071578063daf5f6781461045a578063df89b34414610478578063e9daac88146104a8578063f4070e2d146104c657610173565b8063add31ed714610402578063af21b83814610420578063d547741f1461043e57610173565b806395b32a661461032e578063a10812a71461035e578063a217fddf1461037c578063a900e3391461039a578063a9bf2d77146103b6578063abd02480146103d257610173565b806334d02db41161013057806334d02db41461025e57806336568abe1461027a57806338e6026d14610296578063676a553e146102b25780637acd93c6146102e257806391d14854146102fe57610173565b80630118e3fb1461017857806301ffc9a7146101945780631f77f8c6146101c4578063248a9ca3146101f45780632615765a146102245780632f2ff15d14610242575b600080fd5b610192600480360381019061018d9190610f5c565b6104f6565b005b6101ae60048036038101906101a99190610fe1565b610523565b6040516101bb9190611029565b60405180910390f35b6101de60048036038101906101d99190610f5c565b61059d565b6040516101eb9190611029565b60405180910390f35b61020e6004803603810190610209919061107a565b6105d0565b60405161021b91906110b6565b60405180910390f35b61022c6105ef565b60405161023991906110b6565b60405180910390f35b61025c600480360381019061025791906110d1565b610613565b005b61027860048036038101906102739190610f5c565b61063c565b005b610294600480360381019061028f91906110d1565b610669565b005b6102b060048036038101906102ab9190610f5c565b6106ec565b005b6102cc60048036038101906102c79190610f5c565b610719565b6040516102d99190611029565b60405180910390f35b6102fc60048036038101906102f79190610f5c565b61074c565b005b610318600480360381019061031391906110d1565b610779565b6040516103259190611029565b60405180910390f35b61034860048036038101906103439190610f5c565b6107e3565b6040516103559190611029565b60405180910390f35b610366610816565b60405161037391906110b6565b60405180910390f35b61038461083a565b60405161039191906110b6565b60405180910390f35b6103b460048036038101906103af9190610f5c565b610841565b005b6103d060048036038101906103cb9190610f5c565b61086e565b005b6103ec60048036038101906103e79190610f5c565b61089b565b6040516103f99190611029565b60405180910390f35b61040a6108ce565b60405161041791906110b6565b60405180910390f35b6104286108f2565b60405161043591906110b6565b60405180910390f35b610458600480360381019061045391906110d1565b610916565b005b61046261093f565b60405161046f91906110b6565b60405180910390f35b610492600480360381019061048d9190610f5c565b610963565b60405161049f9190611029565b60405180910390f35b6104b0610996565b6040516104bd91906110b6565b60405180910390f35b6104e060048036038101906104db9190610f5c565b6109ba565b6040516104ed9190611029565b60405180910390f35b6105207f4e9ffdddc97f584b139425ce5ef330e87394004074fd26a145a5b2c82f0c044c82610613565b50565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105965750610595826109ed565b5b9050919050565b60006105c97fb300c03ba420ab9d0241a6226a6dfed8a9649924028cac75820473dd59fe69ac83610779565b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7fb300c03ba420ab9d0241a6226a6dfed8a9649924028cac75820473dd59fe69ac81565b61061c826105d0565b61062d81610628610a57565b610a5f565b6106378383610afc565b505050565b6106667f52ca3a89cb62208d131882b193483d01b3944d11adafdf7c1a0404041271cd3e82610613565b50565b610671610a57565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d590611194565b60405180910390fd5b6106e88282610bdc565b5050565b6107167f7752c70e91cde7a03c746a15fae3fee7c5f52190a95e0c1d7dec3728d8d0083d82610613565b50565b60006107457f4e9ffdddc97f584b139425ce5ef330e87394004074fd26a145a5b2c82f0c044c83610779565b9050919050565b6107767fb300c03ba420ab9d0241a6226a6dfed8a9649924028cac75820473dd59fe69ac82610613565b50565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061080f7f0ca2bc107a02999282a3ef2016fd3d5ca1b04101c59c5d737c6399ee8d9afea483610779565b9050919050565b7f7752c70e91cde7a03c746a15fae3fee7c5f52190a95e0c1d7dec3728d8d0083d81565b6000801b81565b61086b7f4f0af8ee4e6376c93b7de9e82112287aea6d1bce5463866f7b2754dd42e667c682610613565b50565b6108987f0ca2bc107a02999282a3ef2016fd3d5ca1b04101c59c5d737c6399ee8d9afea482610613565b50565b60006108c77f52ca3a89cb62208d131882b193483d01b3944d11adafdf7c1a0404041271cd3e83610779565b9050919050565b7f52ca3a89cb62208d131882b193483d01b3944d11adafdf7c1a0404041271cd3e81565b7f4e9ffdddc97f584b139425ce5ef330e87394004074fd26a145a5b2c82f0c044c81565b61091f826105d0565b6109308161092b610a57565b610a5f565b61093a8383610bdc565b505050565b7f0ca2bc107a02999282a3ef2016fd3d5ca1b04101c59c5d737c6399ee8d9afea481565b600061098f7f4f0af8ee4e6376c93b7de9e82112287aea6d1bce5463866f7b2754dd42e667c683610779565b9050919050565b7f4f0af8ee4e6376c93b7de9e82112287aea6d1bce5463866f7b2754dd42e667c681565b60006109e67f7752c70e91cde7a03c746a15fae3fee7c5f52190a95e0c1d7dec3728d8d0083d83610779565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b610a698282610779565b610af857610a8e8173ffffffffffffffffffffffffffffffffffffffff166014610cbd565b610a9c8360001c6020610cbd565b604051602001610aad9291906112c6565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef919061134a565b60405180910390fd5b5050565b610b068282610779565b610bd857600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b7d610a57565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610be68282610779565b15610cb957600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c5e610a57565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b606060006002836002610cd091906113a5565b610cda91906113ff565b67ffffffffffffffff811115610cf357610cf2611455565b5b6040519080825280601f01601f191660200182016040528015610d255781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610d5d57610d5c611484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610dc157610dc0611484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610e0191906113a5565b610e0b91906113ff565b90505b6001811115610eab577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610e4d57610e4c611484565b5b1a60f81b828281518110610e6457610e63611484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610ea4906114b3565b9050610e0e565b5060008414610eef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee690611529565b60405180910390fd5b8091505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f2982610efe565b9050919050565b610f3981610f1e565b8114610f4457600080fd5b50565b600081359050610f5681610f30565b92915050565b600060208284031215610f7257610f71610ef9565b5b6000610f8084828501610f47565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610fbe81610f89565b8114610fc957600080fd5b50565b600081359050610fdb81610fb5565b92915050565b600060208284031215610ff757610ff6610ef9565b5b600061100584828501610fcc565b91505092915050565b60008115159050919050565b6110238161100e565b82525050565b600060208201905061103e600083018461101a565b92915050565b6000819050919050565b61105781611044565b811461106257600080fd5b50565b6000813590506110748161104e565b92915050565b6000602082840312156110905761108f610ef9565b5b600061109e84828501611065565b91505092915050565b6110b081611044565b82525050565b60006020820190506110cb60008301846110a7565b92915050565b600080604083850312156110e8576110e7610ef9565b5b60006110f685828601611065565b925050602061110785828601610f47565b9150509250929050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061117e602f83611111565b915061118982611122565b604082019050919050565b600060208201905081810360008301526111ad81611171565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006111f56017836111b4565b9150611200826111bf565b601782019050919050565b600081519050919050565b60005b83811015611234578082015181840152602081019050611219565b83811115611243576000848401525b50505050565b60006112548261120b565b61125e81856111b4565b935061126e818560208601611216565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006112b06011836111b4565b91506112bb8261127a565b601182019050919050565b60006112d1826111e8565b91506112dd8285611249565b91506112e8826112a3565b91506112f48284611249565b91508190509392505050565b6000601f19601f8301169050919050565b600061131c8261120b565b6113268185611111565b9350611336818560208601611216565b61133f81611300565b840191505092915050565b600060208201905081810360008301526113648184611311565b905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113b08261136c565b91506113bb8361136c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113f4576113f3611376565b5b828202905092915050565b600061140a8261136c565b91506114158361136c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561144a57611449611376565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006114be8261136c565b915060008214156114d2576114d1611376565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611513602083611111565b915061151e826114dd565b602082019050919050565b6000602082019050818103600083015261154281611506565b905091905056fea264697066735822122026fd4482a5df50cb381f8c61d6490ba484bf44a39112431b8e35197b7e7d3c0764736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11256,
        "contract": "contracts/component/infra/ACLManager.sol:ACLManager",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)11251_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)11251_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)11251_storage"
      },
      "t_struct(RoleData)11251_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 11248,
            "contract": "contracts/component/infra/ACLManager.sol:ACLManager",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 11250,
            "contract": "contracts/component/infra/ACLManager.sol:ACLManager",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}