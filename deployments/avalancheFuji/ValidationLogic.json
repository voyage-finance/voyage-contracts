{
  "address": "0xFb9Efa22ae1A9C6D7A93a9393A9700EcA72B43F8",
  "abi": [],
  "transactionHash": "0x6f0d3003b2d52cb4b7b33ef672880a13c86acc01adde9f2de848b9ad11a9ea83",
  "receipt": {
    "to": null,
    "from": "0xc4940D382C8EAFD2526D1ad56B36CD9674285c43",
    "contractAddress": "0xFb9Efa22ae1A9C6D7A93a9393A9700EcA72B43F8",
    "transactionIndex": 0,
    "gasUsed": "281602",
    "logsBloom": "0x
    "blockHash": "0xeeee5229cea73902cadc237a04d02c93a72f13014462c3130ff0d2935ef32112",
    "transactionHash": "0x6f0d3003b2d52cb4b7b33ef672880a13c86acc01adde9f2de848b9ad11a9ea83",
    "logs": [],
    "blockNumber": 8265296,
    "cumulativeGasUsed": "281602",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5c85b7e31d8f6bb84aef7cdc4c796ea2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateDeposit(DataTypes.ReserveData storage,uint256)\":{\"details\":\"Validates a deposit token\",\"params\":{\"amount\":\"The amount to be deposited*\",\"reserve\":\"The reserve object on which the user is depositing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/logic/ValidationLogic.sol\":\"ValidationLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/configuration/ReserveConfiguration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.9;\\n\\nimport '../types/DataTypes.sol';\\n\\n/**\\n * @title ReserveConfiguration library\\n * @author Voyage\\n * @notice Implements the bitmap logic to handle the reserve configuration, inspired by Aave\\n **/\\nlibrary ReserveConfiguration {\\n    uint256 constant LIQUIDATE_BONUS_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000; // prettier-ignore\\n    uint256 constant DECIMAL_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80FFFF; // prettier-ignore\\n    uint256 constant ACTIVE_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFF; // prettier-ignore\\n    uint256 constant FROZEN_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFF; // prettier-ignore\\n    uint256 constant BORROWING_ENABLE_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFF; // prettier-ignore\\n    uint256 constant RESERVED_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF87FFFFFF; // prettier-ignore\\n    uint256 constant RESERVE_FACTOR_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0007FFFFFFF; // prettier-ignore\\n    uint256 constant LOCKUP_PERIOD_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80007FFFFFFFFFFF; // prettier-ignore\\n\\n    uint256 constant DECIMAL_MASK_BIT_POSITION = 16;\\n    uint256 constant ACTIVE_MASK_BIT_POSITION = 24;\\n    uint256 constant FROZEN_MASK_BIT_POSITION = 25;\\n    uint256 constant BORROWING_ENABLE_MASK_POSITION = 26;\\n    uint256 constant RESERVED_MASK_BIT_POSITION = 27;\\n    uint256 constant RESERVE_FACTOR_MASK_BIT_POSITION = 31;\\n    uint256 constant LOCKUP_PERIOD_MASK_BIT_POSITION = 47;\\n\\n    /**\\n     * Gets the configuration flags of the reserve\\n     * @param self The reserve configuration\\n     * @return The state flags representing active, frozen, borrowing enabled\\n     **/\\n    function getFlags(DataTypes.ReserveConfigurationMap memory self)\\n        internal\\n        view\\n        returns (\\n            bool,\\n            bool,\\n            bool\\n        )\\n    {\\n        uint256 dataLocal = self.data;\\n\\n        return (\\n            (dataLocal & ~ACTIVE_MASK) != 0,\\n            (dataLocal & ~FROZEN_MASK) != 0,\\n            (dataLocal & ~BORROWING_ENABLE_MASK) != 0\\n        );\\n    }\\n\\n    /**\\n     * @dev Gets the active state of the reserve\\n     * @param self The reserve configuration\\n     * @param active The active state\\n     **/\\n    function setActive(\\n        DataTypes.ReserveConfigurationMap memory self,\\n        bool active\\n    ) internal pure {\\n        self.data =\\n            (self.data & ACTIVE_MASK) |\\n            (uint256(active ? 1 : 0) << ACTIVE_MASK_BIT_POSITION);\\n    }\\n\\n    function getActive(DataTypes.ReserveConfigurationMap storage self)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return (self.data & ~ACTIVE_MASK) != 0;\\n    }\\n}\\n\",\"keccak256\":\"0x23a62f92e3d54e0ea396ca9f3bdce06e7c38ef191b2c27ff582140207e5a28c2\",\"license\":\"GPL-3.0\"},\"contracts/libraries/helpers/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title Errors library\\n * @author Voyager\\n * @notice Defines the error messages emitted by the different contracts of the Voyager protocol\\n * @dev Error messages prefix glossary:\\n *  - VL = ValidationLogic\\n *  - LM = LiquidityManager\\n *  - CT = Common errors between tokens\\n *  - RL = ReserveLogic\\n */\\nlibrary Errors {\\n    string public constant VL_INVALID_AMOUNT = '1'; // 'Amount must be greater than 0'\\n    string public constant VL_NO_ACTIVE_RESERVE = '2'; // 'Action requires an active reserve'\\n    string public constant VL_RESERVE_FROZEN = '3'; // 'Action cannot be performed because the reserve is frozen'\\n    string public constant CT_CALLER_MUST_BE_LIQUIDITY_MANAGER_POOL = '20';\\n    string public constant CT_INVALID_MINT_AMOUNT = '21';\\n    string public constant CT_INVALID_BURN_AMOUNT = '22';\\n    string public constant LM_NOT_CONTRACT = '60';\\n    string public constant RL_LIQUIDITY_RATE_OVERFLOW = '80'; //  Liquidity rate overflows uint128\\n    string public constant RL_STABLE_BORROW_RATE_OVERFLOW = '81'; //  Stable borrow rate overflows uint128\\n}\\n\",\"keccak256\":\"0x7fd680f0b6d926ef626121d92f4102e8c87a74d21e6041ec377601da444fc56a\",\"license\":\"agpl-3.0\"},\"contracts/libraries/logic/ValidationLogic.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.9;\\n\\nimport '../types/DataTypes.sol';\\nimport '../configuration/ReserveConfiguration.sol';\\nimport '../helpers/Errors.sol';\\n\\nlibrary ValidationLogic {\\n    using ReserveConfiguration for DataTypes.ReserveConfigurationMap;\\n\\n    /**\\n     * @dev Validates a deposit token\\n     * @param reserve The reserve object on which the user is depositing\\n     * @param amount The amount to be deposited\\n     **/\\n    function validateDeposit(\\n        DataTypes.ReserveData storage reserve,\\n        uint256 amount\\n    ) external view {\\n        (bool isActive, bool isFrozen, ) = reserve.configuration.getFlags();\\n        require(amount != 0, Errors.VL_INVALID_AMOUNT);\\n        require(isActive, Errors.VL_NO_ACTIVE_RESERVE);\\n        require(!isFrozen, Errors.VL_RESERVE_FROZEN);\\n    }\\n}\\n\",\"keccak256\":\"0xdd470946bea9515caf3bfdc20ae4e78f2138dc785ae3650a0ac8951dedf3581e\",\"license\":\"GPL-3.0\"},\"contracts/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.9;\\n\\nlibrary DataTypes {\\n    enum Tranche {\\n        JUNIOR,\\n        SENIOR\\n    }\\n\\n    struct ReserveData {\\n        //stores the reserve configuration\\n        ReserveConfigurationMap configuration;\\n        // for calculating overall interested accumulated\\n        // then split it into two indexs base on two allocations\\n        uint256 currentOverallLiquidityRate;\\n        // Expressed in ray\\n        uint256 currentSeniorIncomeAllocation;\\n        // Expressed in ray\\n        uint256 currentJuniorIncomeAllocation;\\n        uint256 juniorLiquidityIndex;\\n        uint256 seniorLiquidityIndex;\\n        uint256 totalBorrows;\\n        uint256 currentBorrowRate;\\n        // Expressed in ray\\n        uint256 securityRequirement;\\n        //the decimals of the reserve asset\\n        uint256 decimals;\\n        address interestRateStrategyAddress;\\n        address juniorDepositTokenAddress;\\n        address seniorDepositTokenAddress;\\n        address stableDebtAddress;\\n        uint40 juniorLastUpdateTimestamp;\\n        uint40 seniorLastUpdateTimestamp;\\n    }\\n\\n    struct ReserveConfigurationMap {\\n        //bit 0-15: Liquidate bonus\\n        //bit 16-23: Decimals\\n        //bit 24: Reserve is active\\n        //bit 25: reserve is frozen\\n        //bit 26: borrowing is enabled\\n        //bit 27-30: reserved\\n        //bit 31-46: reserve factor\\n        //bit 47-62: lock up period in seconds\\n        uint256 data;\\n    }\\n}\\n\",\"keccak256\":\"0x9bfbc7b717a74aaed343b3add5af6eec7c69dbefb556c4481cbbf96d10ef866b\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x61042a610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80630eca322b1461003a575b600080fd5b610054600480360381019061004f91906102f9565b610056565b005b60008061007a846000016040518060200160405290816000820154815250506101f5565b509150915060008314156040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250906100fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f291906103d2565b60405180910390fd5b50816040518060400160405280600181526020017f320000000000000000000000000000000000000000000000000000000000000081525090610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b91906103d2565b60405180910390fd5b5080156040518060400160405280600181526020017f3300000000000000000000000000000000000000000000000000000000000000815250906101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e591906103d2565b60405180910390fd5b5050505050565b6000806000808460000151905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffff198216141560007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdffffff198316141560007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbffffff1984161415935093509350509193909250565b600080fd5b6000819050919050565b6102a08161028d565b81146102ab57600080fd5b50565b6000813590506102bd81610297565b92915050565b6000819050919050565b6102d6816102c3565b81146102e157600080fd5b50565b6000813590506102f3816102cd565b92915050565b600080604083850312156103105761030f610288565b5b600061031e858286016102ae565b925050602061032f858286016102e4565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610373578082015181840152602081019050610358565b83811115610382576000848401525b50505050565b6000601f19601f8301169050919050565b60006103a482610339565b6103ae8185610344565b93506103be818560208601610355565b6103c781610388565b840191505092915050565b600060208201905081810360008301526103ec8184610399565b90509291505056fea2646970667358221220f4c8f056b0f4805a57d188c1aa76105d915958a7f36773d3f9382ecb9b89f60364736f6c63430008090033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80630eca322b1461003a575b600080fd5b610054600480360381019061004f91906102f9565b610056565b005b60008061007a846000016040518060200160405290816000820154815250506101f5565b509150915060008314156040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250906100fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f291906103d2565b60405180910390fd5b50816040518060400160405280600181526020017f320000000000000000000000000000000000000000000000000000000000000081525090610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b91906103d2565b60405180910390fd5b5080156040518060400160405280600181526020017f3300000000000000000000000000000000000000000000000000000000000000815250906101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e591906103d2565b60405180910390fd5b5050505050565b6000806000808460000151905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffff198216141560007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdffffff198316141560007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbffffff1984161415935093509350509193909250565b600080fd5b6000819050919050565b6102a08161028d565b81146102ab57600080fd5b50565b6000813590506102bd81610297565b92915050565b6000819050919050565b6102d6816102c3565b81146102e157600080fd5b50565b6000813590506102f3816102cd565b92915050565b600080604083850312156103105761030f610288565b5b600061031e858286016102ae565b925050602061032f858286016102e4565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610373578082015181840152602081019050610358565b83811115610382576000848401525b50505050565b6000601f19601f8301169050919050565b60006103a482610339565b6103ae8185610344565b93506103be818560208601610355565b6103c781610388565b840191505092915050565b600060208201905081810360008301526103ec8184610399565b90509291505056fea2646970667358221220f4c8f056b0f4805a57d188c1aa76105d915958a7f36773d3f9382ecb9b89f60364736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "validateDeposit(DataTypes.ReserveData storage,uint256)": {
        "details": "Validates a deposit token",
        "params": {
          "amount": "The amount to be deposited*",
          "reserve": "The reserve object on which the user is depositing"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}